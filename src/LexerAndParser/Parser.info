-----------------------------------------------------------------------------
Info file generated by Happy Version 1.19.8 from Parser.y
-----------------------------------------------------------------------------


terminal pointer is unused
terminal '&' is unused
terminal duets is unused
terminal left is unused
terminal right is unused

-----------------------------------------------------------------------------
Grammar
-----------------------------------------------------------------------------
	%start_parse -> START                              (0)
	START -> IMPORTS OUTSIDEFUNCTION                   (1)
	IMPORTS -> IMPORT newline IMPORTS                  (2)
	IMPORTS ->                                         (3)
	IMPORT -> aroundtheworld IDS                       (4)
	IDS -> id ',' IDS                                  (5)
	IDS -> id                                          (6)
	OUTSIDEFUNCTION -> FUNCTIONINIC newline OUTSIDEFUNCTION   (7)
	OUTSIDEFUNCTION -> DECLARATION newline OUTSIDEFUNCTION   (8)
	OUTSIDEFUNCTION -> DEFINESTRUCT newline OUTSIDEFUNCTION   (9)
	OUTSIDEFUNCTION ->                                 (10)
	FUNCTIONINIC -> dafunk id '(' LPARAMETERSFUNC ')' ':' RETURNTYPE BLOCK   (11)
	RETURNTYPE -> intothevoid                          (12)
	RETURNTYPE -> TYPE                                 (13)
	LPARAMETERSFUNC ->                                 (14)
	LPARAMETERSFUNC -> NONEMPTYLPARAMETERSFUNC         (15)
	NONEMPTYLPARAMETERSFUNC -> FUNCTIONPARAMETER ',' NONEMPTYLPARAMETERSFUNC   (16)
	NONEMPTYLPARAMETERSFUNC -> FUNCTIONPARAMETER       (17)
	FUNCTIONPARAMETER -> TYPE id                       (18)
	BLOCK -> MAYBELINE youbegin INSIDEFUNCTION MAYBELINE whereiend   (19)
	INSIDEFUNCTION -> INSIDEFUNCTION newline INSTRUCTION   (20)
	INSIDEFUNCTION -> INSTRUCTION                      (21)
	INSIDEFUNCTION ->                                  (22)
	DECLARATION -> TYPE DECLARATIONTYPE                (23)
	TYPE -> TYPE2                                      (24)
	TYPE -> TYPE2 '^'                                  (25)
	TYPE2 -> int                                       (26)
	TYPE2 -> float                                     (27)
	TYPE2 -> boolean                                   (28)
	TYPE2 -> char                                      (29)
	TYPE2 -> string                                    (30)
	TYPE2 -> id                                        (31)
	DECLARATIONTYPE -> ID '=' EXPRESSION               (32)
	DECLARATIONTYPE -> ID '=' EXPRESSION ',' DECLARATIONTYPE   (33)
	DECLARATIONTYPE -> ID                              (34)
	DECLARATIONTYPE -> ID ',' DECLARATIONTYPE          (35)
	ID -> id                                           (36)
	ID -> id '[' EXPRESSION ']'                        (37)
	INSTRUCTION -> go '(' PRINT ')'                    (38)
	INSTRUCTION -> goslowly '(' PRINT ')'              (39)
	INSTRUCTION -> gomental '(' PRINT ')'              (40)
	INSTRUCTION -> readmymind '(' IDS ')'              (41)
	INSTRUCTION -> amnesiac '(' id ')'                 (42)
	INSTRUCTION -> if EXPRESSION BLOCK IFELSE          (43)
	INSTRUCTION -> cantstop EXPRESSION BLOCK           (44)
	INSTRUCTION -> onemoretime TYPE id '=' EXPRESSION ';' EXPRESSION ';' EXPRESSION BLOCK   (45)
	INSTRUCTION -> getback EXPRESSION                  (46)
	INSTRUCTION -> breakthru                           (47)
	INSTRUCTION -> exitmusic                           (48)
	INSTRUCTION -> DECLARATION                         (49)
	INSTRUCTION -> EXPRESSION                          (50)
	IFELSE -> ifyouhavetoask EXPRESSION BLOCK newline IFELSE   (51)
	IFELSE -> otherside BLOCK newline                  (52)
	IFELSE ->                                          (53)
	PRINT -> string ',' PRINT                          (54)
	PRINT -> id ',' PRINT                              (55)
	PRINT -> string                                    (56)
	PRINT -> id                                        (57)
	DEFINESTRUCT -> band id id '{' LDECLARATIONS '}'   (58)
	DEFINESTRUCT -> union id id '{' LDECLARATIONS '}'   (59)
	LDECLARATIONS -> LDECLARATIONS newline DECLARATION   (60)
	LDECLARATIONS -> DECLARATION                       (61)
	EXPRESSION -> id                                   (62)
	EXPRESSION -> n                                    (63)
	EXPRESSION -> string                               (64)
	EXPRESSION -> ok                                   (65)
	EXPRESSION -> notok                                (66)
	EXPRESSION -> '(' EXPRESSION ')'                   (67)
	EXPRESSION -> EXPRESSION '<' EXPRESSION            (68)
	EXPRESSION -> EXPRESSION '>' EXPRESSION            (69)
	EXPRESSION -> EXPRESSION '<=' EXPRESSION           (70)
	EXPRESSION -> EXPRESSION '>=' EXPRESSION           (71)
	EXPRESSION -> EXPRESSION '==' EXPRESSION           (72)
	EXPRESSION -> EXPRESSION '!=' EXPRESSION           (73)
	EXPRESSION -> not EXPRESSION                       (74)
	EXPRESSION -> EXPRESSION and EXPRESSION            (75)
	EXPRESSION -> EXPRESSION or EXPRESSION             (76)
	EXPRESSION -> '-' EXPRESSION                       (77)
	EXPRESSION -> EXPRESSION '+' EXPRESSION            (78)
	EXPRESSION -> EXPRESSION '-' EXPRESSION            (79)
	EXPRESSION -> EXPRESSION '*' EXPRESSION            (80)
	EXPRESSION -> EXPRESSION '/' EXPRESSION            (81)
	EXPRESSION -> EXPRESSION '%' EXPRESSION            (82)
	EXPRESSION -> EXPRESSION mod EXPRESSION            (83)
	EXPRESSION -> EXPRESSION div EXPRESSION            (84)
	EXPRESSION -> ARRAYPOSITION                        (85)
	EXPRESSION -> EXPRESSIONSTRUCT                     (86)
	EXPRESSION -> FUNCTIONCALL                         (87)
	EXPRESSION -> newlife '(' EXPRESSION ')'           (88)
	EXPRESSION -> '^' id                               (89)
	EXPRESSION -> id '=' EXPRESSION                    (90)
	ARRAYPOSITION -> id '[' n ']'                      (91)
	ARRAYPOSITION -> id '[' id ']'                     (92)
	EXPRESSIONSTRUCT -> id '.' id                      (93)
	FUNCTIONCALL -> id '(' IDS ')'                     (94)
	MAYBELINE ->                                       (95)
	MAYBELINE -> newline                               (96)

-----------------------------------------------------------------------------
Terminals
-----------------------------------------------------------------------------
	youbegin       { YouBeginTkn _ }
	whereiend      { WhereIEndTkn _ }
	if             { IfTkn $$ }
	ifyouhavetoask { IfYouHaveToAskTkn $$ }
	otherside      { OthersideTkn _ }
	cantstop       { CantStopTkn $$ }
	breakthru      { BreakthruTkn _ }
	onemoretime    { OneMoreTimeTkn $$ }
	';'            { SemiColonTkn _ }
	readmymind     { ReadMyMindTkn $$ }
	go             { GoTkn $$ }
	gomental       { GoMentalTkn $$ }
	goslowly       { GoSlowlyTkn $$ }
	dafunk         { DaFunkTkn $$ }
	':'            { ColonTkn _ }
	getback        { GetBackTkn _ }
	intothevoid    { IntoTheVoidTkn _ }
	newlife        { NewLifeTkn _ }
	amnesiac       { AmnesiacTkn _ }
	exitmusic      { ExitMusicTkn _ }
	aroundtheworld { AroundTheWorldTkn _ }
	int            { IntTkn _ }
	pointer        { PointerTkn _ }
	float          { FloatTkn _ }
	char           { CharTkn _ }
	boolean        { BooleanTkn _ }
	ok             { OkTkn _ }
	notok          { NotOkTkn _ }
	'{'            { OpenBraceTkn _ }
	'}'            { CloseBraceTkn _ }
	'['            { ArrayStartTkn _ }
	']'            { ArrayEndTkn _ }
	band           { BandTkn _ }
	union          { UnionTkn _ }
	'.'            {  }
	'&'            { PointerTkn }
	'^'            {  }
	duets          { DuetsTkn _ }
	left           { LeftTkn _ }
	right          { RightTkn _ }
	mod            { ModTkn _ }
	div            { DivTkn _ }
	not            { NotTkn _ }
	and            { AndTkn _ }
	or             { OrTkn _ }
	','            { CommaTkn _ }
	'('            { ParenOpenTkn _ }
	')'            { ParenCloseTkn _ }
	'+'            { PlusTkn _ }
	'=='           { EqualTkn _ }
	'*'            { ProductTkn _ }
	'-'            { MinusTkn _ }
	'%'            { RestTkn _ }
	'/'            { DivExacTkn _ }
	'!='           { DifTkn _ }
	'>='           { GreaterEqualTkn _ }
	'<='           { LessEqualTkn _ }
	'>'            { GreaterTkn _ }
	'<'            { LessTkn _ }
	'='            { AssignTkn _ }
	id             { IdTkn _ _ }
	n              { NumLiteralTkn _ _ }
	newline        { NewLineTkn _ }
	string         { StringTkn _ _ }

-----------------------------------------------------------------------------
Non-terminals
-----------------------------------------------------------------------------
	%start_parse    rule  0
	START           rule  1
	IMPORTS         rules 2, 3
	IMPORT          rule  4
	IDS             rules 5, 6
	OUTSIDEFUNCTION rules 7, 8, 9, 10
	FUNCTIONINIC    rule  11
	RETURNTYPE      rules 12, 13
	LPARAMETERSFUNC rules 14, 15
	NONEMPTYLPARAMETERSFUNC rules 16, 17
	FUNCTIONPARAMETER rule  18
	BLOCK           rule  19
	INSIDEFUNCTION  rules 20, 21, 22
	DECLARATION     rule  23
	TYPE            rules 24, 25
	TYPE2           rules 26, 27, 28, 29, 30, 31
	DECLARATIONTYPE rules 32, 33, 34, 35
	ID              rules 36, 37
	INSTRUCTION     rules 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50
	IFELSE          rules 51, 52, 53
	PRINT           rules 54, 55, 56, 57
	DEFINESTRUCT    rules 58, 59
	LDECLARATIONS   rules 60, 61
	EXPRESSION      rules 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90
	ARRAYPOSITION   rules 91, 92
	EXPRESSIONSTRUCT rule  93
	FUNCTIONCALL    rule  94
	MAYBELINE       rules 95, 96

-----------------------------------------------------------------------------
States
-----------------------------------------------------------------------------
State 0


	dafunk         reduce using rule 3
	aroundtheworld shift, and enter state 4
	int            reduce using rule 3
	float          reduce using rule 3
	char           reduce using rule 3
	boolean        reduce using rule 3
	band           reduce using rule 3
	union          reduce using rule 3
	id             reduce using rule 3
	string         reduce using rule 3
	%eof           reduce using rule 3

	START          goto state 5
	IMPORTS        goto state 2
	IMPORT         goto state 3

State 1


	aroundtheworld shift, and enter state 4

	IMPORTS        goto state 2
	IMPORT         goto state 3

State 2

	START -> IMPORTS . OUTSIDEFUNCTION                  (rule 1)

	dafunk         shift, and enter state 15
	int            shift, and enter state 16
	float          shift, and enter state 17
	char           shift, and enter state 18
	boolean        shift, and enter state 19
	band           shift, and enter state 20
	union          shift, and enter state 21
	id             shift, and enter state 22
	string         shift, and enter state 23
	%eof           reduce using rule 10

	OUTSIDEFUNCTIONgoto state 9
	FUNCTIONINIC   goto state 10
	DECLARATION    goto state 11
	TYPE           goto state 12
	TYPE2          goto state 13
	DEFINESTRUCT   goto state 14

State 3

	IMPORTS -> IMPORT . newline IMPORTS                 (rule 2)

	newline        shift, and enter state 8


State 4

	IMPORT -> aroundtheworld . IDS                      (rule 4)

	id             shift, and enter state 7

	IDS            goto state 6

State 5

	%start_parse -> START .                             (rule 0)

	%eof           accept


State 6

	IMPORT -> aroundtheworld IDS .                      (rule 4)

	newline        reduce using rule 4


State 7

	IDS -> id . ',' IDS                                 (rule 5)
	IDS -> id .                                         (rule 6)

	','            shift, and enter state 35
	')'            reduce using rule 6
	newline        reduce using rule 6


State 8

	IMPORTS -> IMPORT newline . IMPORTS                 (rule 2)

	dafunk         reduce using rule 3
	aroundtheworld shift, and enter state 4
	int            reduce using rule 3
	float          reduce using rule 3
	char           reduce using rule 3
	boolean        reduce using rule 3
	band           reduce using rule 3
	union          reduce using rule 3
	id             reduce using rule 3
	string         reduce using rule 3
	%eof           reduce using rule 3

	IMPORTS        goto state 34
	IMPORT         goto state 3

State 9

	START -> IMPORTS OUTSIDEFUNCTION .                  (rule 1)

	%eof           reduce using rule 1


State 10

	OUTSIDEFUNCTION -> FUNCTIONINIC . newline OUTSIDEFUNCTION    (rule 7)

	newline        shift, and enter state 33


State 11

	OUTSIDEFUNCTION -> DECLARATION . newline OUTSIDEFUNCTION    (rule 8)

	newline        shift, and enter state 32


State 12

	DECLARATION -> TYPE . DECLARATIONTYPE               (rule 23)

	id             shift, and enter state 31

	DECLARATIONTYPEgoto state 29
	ID             goto state 30

State 13

	TYPE -> TYPE2 .                                     (rule 24)
	TYPE -> TYPE2 . '^'                                 (rule 25)

	youbegin       reduce using rule 24
	'^'            shift, and enter state 28
	id             reduce using rule 24
	newline        reduce using rule 24


State 14

	OUTSIDEFUNCTION -> DEFINESTRUCT . newline OUTSIDEFUNCTION    (rule 9)

	newline        shift, and enter state 27


State 15

	FUNCTIONINIC -> dafunk . id '(' LPARAMETERSFUNC ')' ':' RETURNTYPE BLOCK    (rule 11)

	id             shift, and enter state 26


State 16

	TYPE2 -> int .                                      (rule 26)

	youbegin       reduce using rule 26
	'^'            reduce using rule 26
	id             reduce using rule 26
	newline        reduce using rule 26


State 17

	TYPE2 -> float .                                    (rule 27)

	youbegin       reduce using rule 27
	'^'            reduce using rule 27
	id             reduce using rule 27
	newline        reduce using rule 27


State 18

	TYPE2 -> char .                                     (rule 29)

	youbegin       reduce using rule 29
	'^'            reduce using rule 29
	id             reduce using rule 29
	newline        reduce using rule 29


State 19

	TYPE2 -> boolean .                                  (rule 28)

	youbegin       reduce using rule 28
	'^'            reduce using rule 28
	id             reduce using rule 28
	newline        reduce using rule 28


State 20

	DEFINESTRUCT -> band . id id '{' LDECLARATIONS '}'    (rule 58)

	id             shift, and enter state 25


State 21

	DEFINESTRUCT -> union . id id '{' LDECLARATIONS '}'    (rule 59)

	id             shift, and enter state 24


State 22

	TYPE2 -> id .                                       (rule 31)

	youbegin       reduce using rule 31
	'^'            reduce using rule 31
	id             reduce using rule 31
	newline        reduce using rule 31


State 23

	TYPE2 -> string .                                   (rule 30)

	youbegin       reduce using rule 30
	'^'            reduce using rule 30
	id             reduce using rule 30
	newline        reduce using rule 30


State 24

	DEFINESTRUCT -> union id . id '{' LDECLARATIONS '}'    (rule 59)

	id             shift, and enter state 45


State 25

	DEFINESTRUCT -> band id . id '{' LDECLARATIONS '}'    (rule 58)

	id             shift, and enter state 44


State 26

	FUNCTIONINIC -> dafunk id . '(' LPARAMETERSFUNC ')' ':' RETURNTYPE BLOCK    (rule 11)

	'('            shift, and enter state 43


State 27

	OUTSIDEFUNCTION -> DEFINESTRUCT newline . OUTSIDEFUNCTION    (rule 9)

	dafunk         shift, and enter state 15
	int            shift, and enter state 16
	float          shift, and enter state 17
	char           shift, and enter state 18
	boolean        shift, and enter state 19
	band           shift, and enter state 20
	union          shift, and enter state 21
	id             shift, and enter state 22
	string         shift, and enter state 23
	%eof           reduce using rule 10

	OUTSIDEFUNCTIONgoto state 42
	FUNCTIONINIC   goto state 10
	DECLARATION    goto state 11
	TYPE           goto state 12
	TYPE2          goto state 13
	DEFINESTRUCT   goto state 14

State 28

	TYPE -> TYPE2 '^' .                                 (rule 25)

	youbegin       reduce using rule 25
	id             reduce using rule 25
	newline        reduce using rule 25


State 29

	DECLARATION -> TYPE DECLARATIONTYPE .               (rule 23)

	whereiend      reduce using rule 23
	'}'            reduce using rule 23
	newline        reduce using rule 23


State 30

	DECLARATIONTYPE -> ID . '=' EXPRESSION              (rule 32)
	DECLARATIONTYPE -> ID . '=' EXPRESSION ',' DECLARATIONTYPE    (rule 33)
	DECLARATIONTYPE -> ID .                             (rule 34)
	DECLARATIONTYPE -> ID . ',' DECLARATIONTYPE         (rule 35)

	whereiend      reduce using rule 34
	'}'            reduce using rule 34
	','            shift, and enter state 40
	'='            shift, and enter state 41
	newline        reduce using rule 34


State 31

	ID -> id .                                          (rule 36)
	ID -> id . '[' EXPRESSION ']'                       (rule 37)

	whereiend      reduce using rule 36
	'}'            reduce using rule 36
	'['            shift, and enter state 39
	','            reduce using rule 36
	'='            reduce using rule 36
	newline        reduce using rule 36


State 32

	OUTSIDEFUNCTION -> DECLARATION newline . OUTSIDEFUNCTION    (rule 8)

	dafunk         shift, and enter state 15
	int            shift, and enter state 16
	float          shift, and enter state 17
	char           shift, and enter state 18
	boolean        shift, and enter state 19
	band           shift, and enter state 20
	union          shift, and enter state 21
	id             shift, and enter state 22
	string         shift, and enter state 23
	%eof           reduce using rule 10

	OUTSIDEFUNCTIONgoto state 38
	FUNCTIONINIC   goto state 10
	DECLARATION    goto state 11
	TYPE           goto state 12
	TYPE2          goto state 13
	DEFINESTRUCT   goto state 14

State 33

	OUTSIDEFUNCTION -> FUNCTIONINIC newline . OUTSIDEFUNCTION    (rule 7)

	dafunk         shift, and enter state 15
	int            shift, and enter state 16
	float          shift, and enter state 17
	char           shift, and enter state 18
	boolean        shift, and enter state 19
	band           shift, and enter state 20
	union          shift, and enter state 21
	id             shift, and enter state 22
	string         shift, and enter state 23
	%eof           reduce using rule 10

	OUTSIDEFUNCTIONgoto state 37
	FUNCTIONINIC   goto state 10
	DECLARATION    goto state 11
	TYPE           goto state 12
	TYPE2          goto state 13
	DEFINESTRUCT   goto state 14

State 34

	IMPORTS -> IMPORT newline IMPORTS .                 (rule 2)

	dafunk         reduce using rule 2
	int            reduce using rule 2
	float          reduce using rule 2
	char           reduce using rule 2
	boolean        reduce using rule 2
	band           reduce using rule 2
	union          reduce using rule 2
	id             reduce using rule 2
	string         reduce using rule 2
	%eof           reduce using rule 2


State 35

	IDS -> id ',' . IDS                                 (rule 5)

	id             shift, and enter state 7

	IDS            goto state 36

State 36

	IDS -> id ',' IDS .                                 (rule 5)

	')'            reduce using rule 5
	newline        reduce using rule 5


State 37

	OUTSIDEFUNCTION -> FUNCTIONINIC newline OUTSIDEFUNCTION .    (rule 7)

	%eof           reduce using rule 7


State 38

	OUTSIDEFUNCTION -> DECLARATION newline OUTSIDEFUNCTION .    (rule 8)

	%eof           reduce using rule 8


State 39

	ID -> id '[' . EXPRESSION ']'                       (rule 37)

	newlife        shift, and enter state 56
	ok             shift, and enter state 57
	notok          shift, and enter state 58
	'^'            shift, and enter state 59
	not            shift, and enter state 60
	'('            shift, and enter state 61
	'-'            shift, and enter state 62
	id             shift, and enter state 63
	n              shift, and enter state 64
	string         shift, and enter state 65

	EXPRESSION     goto state 67
	ARRAYPOSITION  goto state 53
	EXPRESSIONSTRUCTgoto state 54
	FUNCTIONCALL   goto state 55

State 40

	DECLARATIONTYPE -> ID ',' . DECLARATIONTYPE         (rule 35)

	id             shift, and enter state 31

	DECLARATIONTYPEgoto state 66
	ID             goto state 30

State 41

	DECLARATIONTYPE -> ID '=' . EXPRESSION              (rule 32)
	DECLARATIONTYPE -> ID '=' . EXPRESSION ',' DECLARATIONTYPE    (rule 33)

	newlife        shift, and enter state 56
	ok             shift, and enter state 57
	notok          shift, and enter state 58
	'^'            shift, and enter state 59
	not            shift, and enter state 60
	'('            shift, and enter state 61
	'-'            shift, and enter state 62
	id             shift, and enter state 63
	n              shift, and enter state 64
	string         shift, and enter state 65

	EXPRESSION     goto state 52
	ARRAYPOSITION  goto state 53
	EXPRESSIONSTRUCTgoto state 54
	FUNCTIONCALL   goto state 55

State 42

	OUTSIDEFUNCTION -> DEFINESTRUCT newline OUTSIDEFUNCTION .    (rule 9)

	%eof           reduce using rule 9


State 43

	FUNCTIONINIC -> dafunk id '(' . LPARAMETERSFUNC ')' ':' RETURNTYPE BLOCK    (rule 11)

	int            shift, and enter state 16
	float          shift, and enter state 17
	char           shift, and enter state 18
	boolean        shift, and enter state 19
	')'            reduce using rule 14
	id             shift, and enter state 22
	string         shift, and enter state 23

	LPARAMETERSFUNCgoto state 48
	NONEMPTYLPARAMETERSFUNCgoto state 49
	FUNCTIONPARAMETERgoto state 50
	TYPE           goto state 51
	TYPE2          goto state 13

State 44

	DEFINESTRUCT -> band id id . '{' LDECLARATIONS '}'    (rule 58)

	'{'            shift, and enter state 47


State 45

	DEFINESTRUCT -> union id id . '{' LDECLARATIONS '}'    (rule 59)

	'{'            shift, and enter state 46


State 46

	DEFINESTRUCT -> union id id '{' . LDECLARATIONS '}'    (rule 59)

	int            shift, and enter state 16
	float          shift, and enter state 17
	char           shift, and enter state 18
	boolean        shift, and enter state 19
	id             shift, and enter state 22
	string         shift, and enter state 23

	DECLARATION    goto state 97
	TYPE           goto state 12
	TYPE2          goto state 13
	LDECLARATIONS  goto state 99

State 47

	DEFINESTRUCT -> band id id '{' . LDECLARATIONS '}'    (rule 58)

	int            shift, and enter state 16
	float          shift, and enter state 17
	char           shift, and enter state 18
	boolean        shift, and enter state 19
	id             shift, and enter state 22
	string         shift, and enter state 23

	DECLARATION    goto state 97
	TYPE           goto state 12
	TYPE2          goto state 13
	LDECLARATIONS  goto state 98

State 48

	FUNCTIONINIC -> dafunk id '(' LPARAMETERSFUNC . ')' ':' RETURNTYPE BLOCK    (rule 11)

	')'            shift, and enter state 96


State 49

	LPARAMETERSFUNC -> NONEMPTYLPARAMETERSFUNC .        (rule 15)

	')'            reduce using rule 15


State 50

	NONEMPTYLPARAMETERSFUNC -> FUNCTIONPARAMETER . ',' NONEMPTYLPARAMETERSFUNC    (rule 16)
	NONEMPTYLPARAMETERSFUNC -> FUNCTIONPARAMETER .      (rule 17)

	','            shift, and enter state 95
	')'            reduce using rule 17


State 51

	FUNCTIONPARAMETER -> TYPE . id                      (rule 18)

	id             shift, and enter state 94


State 52

	DECLARATIONTYPE -> ID '=' EXPRESSION .              (rule 32)
	DECLARATIONTYPE -> ID '=' EXPRESSION . ',' DECLARATIONTYPE    (rule 33)
	EXPRESSION -> EXPRESSION . '<' EXPRESSION           (rule 68)
	EXPRESSION -> EXPRESSION . '>' EXPRESSION           (rule 69)
	EXPRESSION -> EXPRESSION . '<=' EXPRESSION          (rule 70)
	EXPRESSION -> EXPRESSION . '>=' EXPRESSION          (rule 71)
	EXPRESSION -> EXPRESSION . '==' EXPRESSION          (rule 72)
	EXPRESSION -> EXPRESSION . '!=' EXPRESSION          (rule 73)
	EXPRESSION -> EXPRESSION . and EXPRESSION           (rule 75)
	EXPRESSION -> EXPRESSION . or EXPRESSION            (rule 76)
	EXPRESSION -> EXPRESSION . '+' EXPRESSION           (rule 78)
	EXPRESSION -> EXPRESSION . '-' EXPRESSION           (rule 79)
	EXPRESSION -> EXPRESSION . '*' EXPRESSION           (rule 80)
	EXPRESSION -> EXPRESSION . '/' EXPRESSION           (rule 81)
	EXPRESSION -> EXPRESSION . '%' EXPRESSION           (rule 82)
	EXPRESSION -> EXPRESSION . mod EXPRESSION           (rule 83)
	EXPRESSION -> EXPRESSION . div EXPRESSION           (rule 84)

	whereiend      reduce using rule 32
	'}'            reduce using rule 32
	mod            shift, and enter state 69
	div            shift, and enter state 70
	and            shift, and enter state 71
	or             shift, and enter state 72
	','            shift, and enter state 93
	'+'            shift, and enter state 73
	'=='           shift, and enter state 74
	'*'            shift, and enter state 75
	'-'            shift, and enter state 76
	'%'            shift, and enter state 77
	'/'            shift, and enter state 78
	'!='           shift, and enter state 79
	'>='           shift, and enter state 80
	'<='           shift, and enter state 81
	'>'            shift, and enter state 82
	'<'            shift, and enter state 83
	newline        reduce using rule 32


State 53

	EXPRESSION -> ARRAYPOSITION .                       (rule 85)

	youbegin       reduce using rule 85
	whereiend      reduce using rule 85
	';'            reduce using rule 85
	'}'            reduce using rule 85
	']'            reduce using rule 85
	mod            reduce using rule 85
	div            reduce using rule 85
	and            reduce using rule 85
	or             reduce using rule 85
	','            reduce using rule 85
	')'            reduce using rule 85
	'+'            reduce using rule 85
	'=='           reduce using rule 85
	'*'            reduce using rule 85
	'-'            reduce using rule 85
	'%'            reduce using rule 85
	'/'            reduce using rule 85
	'!='           reduce using rule 85
	'>='           reduce using rule 85
	'<='           reduce using rule 85
	'>'            reduce using rule 85
	'<'            reduce using rule 85
	newline        reduce using rule 85


State 54

	EXPRESSION -> EXPRESSIONSTRUCT .                    (rule 86)

	youbegin       reduce using rule 86
	whereiend      reduce using rule 86
	';'            reduce using rule 86
	'}'            reduce using rule 86
	']'            reduce using rule 86
	mod            reduce using rule 86
	div            reduce using rule 86
	and            reduce using rule 86
	or             reduce using rule 86
	','            reduce using rule 86
	')'            reduce using rule 86
	'+'            reduce using rule 86
	'=='           reduce using rule 86
	'*'            reduce using rule 86
	'-'            reduce using rule 86
	'%'            reduce using rule 86
	'/'            reduce using rule 86
	'!='           reduce using rule 86
	'>='           reduce using rule 86
	'<='           reduce using rule 86
	'>'            reduce using rule 86
	'<'            reduce using rule 86
	newline        reduce using rule 86


State 55

	EXPRESSION -> FUNCTIONCALL .                        (rule 87)

	youbegin       reduce using rule 87
	whereiend      reduce using rule 87
	';'            reduce using rule 87
	'}'            reduce using rule 87
	']'            reduce using rule 87
	mod            reduce using rule 87
	div            reduce using rule 87
	and            reduce using rule 87
	or             reduce using rule 87
	','            reduce using rule 87
	')'            reduce using rule 87
	'+'            reduce using rule 87
	'=='           reduce using rule 87
	'*'            reduce using rule 87
	'-'            reduce using rule 87
	'%'            reduce using rule 87
	'/'            reduce using rule 87
	'!='           reduce using rule 87
	'>='           reduce using rule 87
	'<='           reduce using rule 87
	'>'            reduce using rule 87
	'<'            reduce using rule 87
	newline        reduce using rule 87


State 56

	EXPRESSION -> newlife . '(' EXPRESSION ')'          (rule 88)

	'('            shift, and enter state 92


State 57

	EXPRESSION -> ok .                                  (rule 65)

	youbegin       reduce using rule 65
	whereiend      reduce using rule 65
	';'            reduce using rule 65
	'}'            reduce using rule 65
	']'            reduce using rule 65
	mod            reduce using rule 65
	div            reduce using rule 65
	and            reduce using rule 65
	or             reduce using rule 65
	','            reduce using rule 65
	')'            reduce using rule 65
	'+'            reduce using rule 65
	'=='           reduce using rule 65
	'*'            reduce using rule 65
	'-'            reduce using rule 65
	'%'            reduce using rule 65
	'/'            reduce using rule 65
	'!='           reduce using rule 65
	'>='           reduce using rule 65
	'<='           reduce using rule 65
	'>'            reduce using rule 65
	'<'            reduce using rule 65
	newline        reduce using rule 65


State 58

	EXPRESSION -> notok .                               (rule 66)

	youbegin       reduce using rule 66
	whereiend      reduce using rule 66
	';'            reduce using rule 66
	'}'            reduce using rule 66
	']'            reduce using rule 66
	mod            reduce using rule 66
	div            reduce using rule 66
	and            reduce using rule 66
	or             reduce using rule 66
	','            reduce using rule 66
	')'            reduce using rule 66
	'+'            reduce using rule 66
	'=='           reduce using rule 66
	'*'            reduce using rule 66
	'-'            reduce using rule 66
	'%'            reduce using rule 66
	'/'            reduce using rule 66
	'!='           reduce using rule 66
	'>='           reduce using rule 66
	'<='           reduce using rule 66
	'>'            reduce using rule 66
	'<'            reduce using rule 66
	newline        reduce using rule 66


State 59

	EXPRESSION -> '^' . id                              (rule 89)

	id             shift, and enter state 91


State 60

	EXPRESSION -> not . EXPRESSION                      (rule 74)

	newlife        shift, and enter state 56
	ok             shift, and enter state 57
	notok          shift, and enter state 58
	'^'            shift, and enter state 59
	not            shift, and enter state 60
	'('            shift, and enter state 61
	'-'            shift, and enter state 62
	id             shift, and enter state 63
	n              shift, and enter state 64
	string         shift, and enter state 65

	EXPRESSION     goto state 90
	ARRAYPOSITION  goto state 53
	EXPRESSIONSTRUCTgoto state 54
	FUNCTIONCALL   goto state 55

State 61

	EXPRESSION -> '(' . EXPRESSION ')'                  (rule 67)

	newlife        shift, and enter state 56
	ok             shift, and enter state 57
	notok          shift, and enter state 58
	'^'            shift, and enter state 59
	not            shift, and enter state 60
	'('            shift, and enter state 61
	'-'            shift, and enter state 62
	id             shift, and enter state 63
	n              shift, and enter state 64
	string         shift, and enter state 65

	EXPRESSION     goto state 89
	ARRAYPOSITION  goto state 53
	EXPRESSIONSTRUCTgoto state 54
	FUNCTIONCALL   goto state 55

State 62

	EXPRESSION -> '-' . EXPRESSION                      (rule 77)

	newlife        shift, and enter state 56
	ok             shift, and enter state 57
	notok          shift, and enter state 58
	'^'            shift, and enter state 59
	not            shift, and enter state 60
	'('            shift, and enter state 61
	'-'            shift, and enter state 62
	id             shift, and enter state 63
	n              shift, and enter state 64
	string         shift, and enter state 65

	EXPRESSION     goto state 88
	ARRAYPOSITION  goto state 53
	EXPRESSIONSTRUCTgoto state 54
	FUNCTIONCALL   goto state 55

State 63

	EXPRESSION -> id .                                  (rule 62)
	EXPRESSION -> id . '=' EXPRESSION                   (rule 90)
	ARRAYPOSITION -> id . '[' n ']'                     (rule 91)
	ARRAYPOSITION -> id . '[' id ']'                    (rule 92)
	EXPRESSIONSTRUCT -> id . '.' id                     (rule 93)
	FUNCTIONCALL -> id . '(' IDS ')'                    (rule 94)

	youbegin       reduce using rule 62
	whereiend      reduce using rule 62
	';'            reduce using rule 62
	'}'            reduce using rule 62
	'['            shift, and enter state 84
	']'            reduce using rule 62
	'.'            shift, and enter state 85
	mod            reduce using rule 62
	div            reduce using rule 62
	and            reduce using rule 62
	or             reduce using rule 62
	','            reduce using rule 62
	'('            shift, and enter state 86
	')'            reduce using rule 62
	'+'            reduce using rule 62
	'=='           reduce using rule 62
	'*'            reduce using rule 62
	'-'            reduce using rule 62
	'%'            reduce using rule 62
	'/'            reduce using rule 62
	'!='           reduce using rule 62
	'>='           reduce using rule 62
	'<='           reduce using rule 62
	'>'            reduce using rule 62
	'<'            reduce using rule 62
	'='            shift, and enter state 87
	newline        reduce using rule 62


State 64

	EXPRESSION -> n .                                   (rule 63)

	youbegin       reduce using rule 63
	whereiend      reduce using rule 63
	';'            reduce using rule 63
	'}'            reduce using rule 63
	']'            reduce using rule 63
	mod            reduce using rule 63
	div            reduce using rule 63
	and            reduce using rule 63
	or             reduce using rule 63
	','            reduce using rule 63
	')'            reduce using rule 63
	'+'            reduce using rule 63
	'=='           reduce using rule 63
	'*'            reduce using rule 63
	'-'            reduce using rule 63
	'%'            reduce using rule 63
	'/'            reduce using rule 63
	'!='           reduce using rule 63
	'>='           reduce using rule 63
	'<='           reduce using rule 63
	'>'            reduce using rule 63
	'<'            reduce using rule 63
	newline        reduce using rule 63


State 65

	EXPRESSION -> string .                              (rule 64)

	youbegin       reduce using rule 64
	whereiend      reduce using rule 64
	';'            reduce using rule 64
	'}'            reduce using rule 64
	']'            reduce using rule 64
	mod            reduce using rule 64
	div            reduce using rule 64
	and            reduce using rule 64
	or             reduce using rule 64
	','            reduce using rule 64
	')'            reduce using rule 64
	'+'            reduce using rule 64
	'=='           reduce using rule 64
	'*'            reduce using rule 64
	'-'            reduce using rule 64
	'%'            reduce using rule 64
	'/'            reduce using rule 64
	'!='           reduce using rule 64
	'>='           reduce using rule 64
	'<='           reduce using rule 64
	'>'            reduce using rule 64
	'<'            reduce using rule 64
	newline        reduce using rule 64


State 66

	DECLARATIONTYPE -> ID ',' DECLARATIONTYPE .         (rule 35)

	whereiend      reduce using rule 35
	'}'            reduce using rule 35
	newline        reduce using rule 35


State 67

	ID -> id '[' EXPRESSION . ']'                       (rule 37)
	EXPRESSION -> EXPRESSION . '<' EXPRESSION           (rule 68)
	EXPRESSION -> EXPRESSION . '>' EXPRESSION           (rule 69)
	EXPRESSION -> EXPRESSION . '<=' EXPRESSION          (rule 70)
	EXPRESSION -> EXPRESSION . '>=' EXPRESSION          (rule 71)
	EXPRESSION -> EXPRESSION . '==' EXPRESSION          (rule 72)
	EXPRESSION -> EXPRESSION . '!=' EXPRESSION          (rule 73)
	EXPRESSION -> EXPRESSION . and EXPRESSION           (rule 75)
	EXPRESSION -> EXPRESSION . or EXPRESSION            (rule 76)
	EXPRESSION -> EXPRESSION . '+' EXPRESSION           (rule 78)
	EXPRESSION -> EXPRESSION . '-' EXPRESSION           (rule 79)
	EXPRESSION -> EXPRESSION . '*' EXPRESSION           (rule 80)
	EXPRESSION -> EXPRESSION . '/' EXPRESSION           (rule 81)
	EXPRESSION -> EXPRESSION . '%' EXPRESSION           (rule 82)
	EXPRESSION -> EXPRESSION . mod EXPRESSION           (rule 83)
	EXPRESSION -> EXPRESSION . div EXPRESSION           (rule 84)

	']'            shift, and enter state 68
	mod            shift, and enter state 69
	div            shift, and enter state 70
	and            shift, and enter state 71
	or             shift, and enter state 72
	'+'            shift, and enter state 73
	'=='           shift, and enter state 74
	'*'            shift, and enter state 75
	'-'            shift, and enter state 76
	'%'            shift, and enter state 77
	'/'            shift, and enter state 78
	'!='           shift, and enter state 79
	'>='           shift, and enter state 80
	'<='           shift, and enter state 81
	'>'            shift, and enter state 82
	'<'            shift, and enter state 83


State 68

	ID -> id '[' EXPRESSION ']' .                       (rule 37)

	whereiend      reduce using rule 37
	'}'            reduce using rule 37
	','            reduce using rule 37
	'='            reduce using rule 37
	newline        reduce using rule 37


State 69

	EXPRESSION -> EXPRESSION mod . EXPRESSION           (rule 83)

	newlife        shift, and enter state 56
	ok             shift, and enter state 57
	notok          shift, and enter state 58
	'^'            shift, and enter state 59
	not            shift, and enter state 60
	'('            shift, and enter state 61
	'-'            shift, and enter state 62
	id             shift, and enter state 63
	n              shift, and enter state 64
	string         shift, and enter state 65

	EXPRESSION     goto state 127
	ARRAYPOSITION  goto state 53
	EXPRESSIONSTRUCTgoto state 54
	FUNCTIONCALL   goto state 55

State 70

	EXPRESSION -> EXPRESSION div . EXPRESSION           (rule 84)

	newlife        shift, and enter state 56
	ok             shift, and enter state 57
	notok          shift, and enter state 58
	'^'            shift, and enter state 59
	not            shift, and enter state 60
	'('            shift, and enter state 61
	'-'            shift, and enter state 62
	id             shift, and enter state 63
	n              shift, and enter state 64
	string         shift, and enter state 65

	EXPRESSION     goto state 126
	ARRAYPOSITION  goto state 53
	EXPRESSIONSTRUCTgoto state 54
	FUNCTIONCALL   goto state 55

State 71

	EXPRESSION -> EXPRESSION and . EXPRESSION           (rule 75)

	newlife        shift, and enter state 56
	ok             shift, and enter state 57
	notok          shift, and enter state 58
	'^'            shift, and enter state 59
	not            shift, and enter state 60
	'('            shift, and enter state 61
	'-'            shift, and enter state 62
	id             shift, and enter state 63
	n              shift, and enter state 64
	string         shift, and enter state 65

	EXPRESSION     goto state 125
	ARRAYPOSITION  goto state 53
	EXPRESSIONSTRUCTgoto state 54
	FUNCTIONCALL   goto state 55

State 72

	EXPRESSION -> EXPRESSION or . EXPRESSION            (rule 76)

	newlife        shift, and enter state 56
	ok             shift, and enter state 57
	notok          shift, and enter state 58
	'^'            shift, and enter state 59
	not            shift, and enter state 60
	'('            shift, and enter state 61
	'-'            shift, and enter state 62
	id             shift, and enter state 63
	n              shift, and enter state 64
	string         shift, and enter state 65

	EXPRESSION     goto state 124
	ARRAYPOSITION  goto state 53
	EXPRESSIONSTRUCTgoto state 54
	FUNCTIONCALL   goto state 55

State 73

	EXPRESSION -> EXPRESSION '+' . EXPRESSION           (rule 78)

	newlife        shift, and enter state 56
	ok             shift, and enter state 57
	notok          shift, and enter state 58
	'^'            shift, and enter state 59
	not            shift, and enter state 60
	'('            shift, and enter state 61
	'-'            shift, and enter state 62
	id             shift, and enter state 63
	n              shift, and enter state 64
	string         shift, and enter state 65

	EXPRESSION     goto state 123
	ARRAYPOSITION  goto state 53
	EXPRESSIONSTRUCTgoto state 54
	FUNCTIONCALL   goto state 55

State 74

	EXPRESSION -> EXPRESSION '==' . EXPRESSION          (rule 72)

	newlife        shift, and enter state 56
	ok             shift, and enter state 57
	notok          shift, and enter state 58
	'^'            shift, and enter state 59
	not            shift, and enter state 60
	'('            shift, and enter state 61
	'-'            shift, and enter state 62
	id             shift, and enter state 63
	n              shift, and enter state 64
	string         shift, and enter state 65

	EXPRESSION     goto state 122
	ARRAYPOSITION  goto state 53
	EXPRESSIONSTRUCTgoto state 54
	FUNCTIONCALL   goto state 55

State 75

	EXPRESSION -> EXPRESSION '*' . EXPRESSION           (rule 80)

	newlife        shift, and enter state 56
	ok             shift, and enter state 57
	notok          shift, and enter state 58
	'^'            shift, and enter state 59
	not            shift, and enter state 60
	'('            shift, and enter state 61
	'-'            shift, and enter state 62
	id             shift, and enter state 63
	n              shift, and enter state 64
	string         shift, and enter state 65

	EXPRESSION     goto state 121
	ARRAYPOSITION  goto state 53
	EXPRESSIONSTRUCTgoto state 54
	FUNCTIONCALL   goto state 55

State 76

	EXPRESSION -> EXPRESSION '-' . EXPRESSION           (rule 79)

	newlife        shift, and enter state 56
	ok             shift, and enter state 57
	notok          shift, and enter state 58
	'^'            shift, and enter state 59
	not            shift, and enter state 60
	'('            shift, and enter state 61
	'-'            shift, and enter state 62
	id             shift, and enter state 63
	n              shift, and enter state 64
	string         shift, and enter state 65

	EXPRESSION     goto state 120
	ARRAYPOSITION  goto state 53
	EXPRESSIONSTRUCTgoto state 54
	FUNCTIONCALL   goto state 55

State 77

	EXPRESSION -> EXPRESSION '%' . EXPRESSION           (rule 82)

	newlife        shift, and enter state 56
	ok             shift, and enter state 57
	notok          shift, and enter state 58
	'^'            shift, and enter state 59
	not            shift, and enter state 60
	'('            shift, and enter state 61
	'-'            shift, and enter state 62
	id             shift, and enter state 63
	n              shift, and enter state 64
	string         shift, and enter state 65

	EXPRESSION     goto state 119
	ARRAYPOSITION  goto state 53
	EXPRESSIONSTRUCTgoto state 54
	FUNCTIONCALL   goto state 55

State 78

	EXPRESSION -> EXPRESSION '/' . EXPRESSION           (rule 81)

	newlife        shift, and enter state 56
	ok             shift, and enter state 57
	notok          shift, and enter state 58
	'^'            shift, and enter state 59
	not            shift, and enter state 60
	'('            shift, and enter state 61
	'-'            shift, and enter state 62
	id             shift, and enter state 63
	n              shift, and enter state 64
	string         shift, and enter state 65

	EXPRESSION     goto state 118
	ARRAYPOSITION  goto state 53
	EXPRESSIONSTRUCTgoto state 54
	FUNCTIONCALL   goto state 55

State 79

	EXPRESSION -> EXPRESSION '!=' . EXPRESSION          (rule 73)

	newlife        shift, and enter state 56
	ok             shift, and enter state 57
	notok          shift, and enter state 58
	'^'            shift, and enter state 59
	not            shift, and enter state 60
	'('            shift, and enter state 61
	'-'            shift, and enter state 62
	id             shift, and enter state 63
	n              shift, and enter state 64
	string         shift, and enter state 65

	EXPRESSION     goto state 117
	ARRAYPOSITION  goto state 53
	EXPRESSIONSTRUCTgoto state 54
	FUNCTIONCALL   goto state 55

State 80

	EXPRESSION -> EXPRESSION '>=' . EXPRESSION          (rule 71)

	newlife        shift, and enter state 56
	ok             shift, and enter state 57
	notok          shift, and enter state 58
	'^'            shift, and enter state 59
	not            shift, and enter state 60
	'('            shift, and enter state 61
	'-'            shift, and enter state 62
	id             shift, and enter state 63
	n              shift, and enter state 64
	string         shift, and enter state 65

	EXPRESSION     goto state 116
	ARRAYPOSITION  goto state 53
	EXPRESSIONSTRUCTgoto state 54
	FUNCTIONCALL   goto state 55

State 81

	EXPRESSION -> EXPRESSION '<=' . EXPRESSION          (rule 70)

	newlife        shift, and enter state 56
	ok             shift, and enter state 57
	notok          shift, and enter state 58
	'^'            shift, and enter state 59
	not            shift, and enter state 60
	'('            shift, and enter state 61
	'-'            shift, and enter state 62
	id             shift, and enter state 63
	n              shift, and enter state 64
	string         shift, and enter state 65

	EXPRESSION     goto state 115
	ARRAYPOSITION  goto state 53
	EXPRESSIONSTRUCTgoto state 54
	FUNCTIONCALL   goto state 55

State 82

	EXPRESSION -> EXPRESSION '>' . EXPRESSION           (rule 69)

	newlife        shift, and enter state 56
	ok             shift, and enter state 57
	notok          shift, and enter state 58
	'^'            shift, and enter state 59
	not            shift, and enter state 60
	'('            shift, and enter state 61
	'-'            shift, and enter state 62
	id             shift, and enter state 63
	n              shift, and enter state 64
	string         shift, and enter state 65

	EXPRESSION     goto state 114
	ARRAYPOSITION  goto state 53
	EXPRESSIONSTRUCTgoto state 54
	FUNCTIONCALL   goto state 55

State 83

	EXPRESSION -> EXPRESSION '<' . EXPRESSION           (rule 68)

	newlife        shift, and enter state 56
	ok             shift, and enter state 57
	notok          shift, and enter state 58
	'^'            shift, and enter state 59
	not            shift, and enter state 60
	'('            shift, and enter state 61
	'-'            shift, and enter state 62
	id             shift, and enter state 63
	n              shift, and enter state 64
	string         shift, and enter state 65

	EXPRESSION     goto state 113
	ARRAYPOSITION  goto state 53
	EXPRESSIONSTRUCTgoto state 54
	FUNCTIONCALL   goto state 55

State 84

	ARRAYPOSITION -> id '[' . n ']'                     (rule 91)
	ARRAYPOSITION -> id '[' . id ']'                    (rule 92)

	id             shift, and enter state 111
	n              shift, and enter state 112


State 85

	EXPRESSIONSTRUCT -> id '.' . id                     (rule 93)

	id             shift, and enter state 110


State 86

	FUNCTIONCALL -> id '(' . IDS ')'                    (rule 94)

	id             shift, and enter state 7

	IDS            goto state 109

State 87

	EXPRESSION -> id '=' . EXPRESSION                   (rule 90)

	newlife        shift, and enter state 56
	ok             shift, and enter state 57
	notok          shift, and enter state 58
	'^'            shift, and enter state 59
	not            shift, and enter state 60
	'('            shift, and enter state 61
	'-'            shift, and enter state 62
	id             shift, and enter state 63
	n              shift, and enter state 64
	string         shift, and enter state 65

	EXPRESSION     goto state 108
	ARRAYPOSITION  goto state 53
	EXPRESSIONSTRUCTgoto state 54
	FUNCTIONCALL   goto state 55

State 88

	EXPRESSION -> EXPRESSION . '<' EXPRESSION           (rule 68)
	EXPRESSION -> EXPRESSION . '>' EXPRESSION           (rule 69)
	EXPRESSION -> EXPRESSION . '<=' EXPRESSION          (rule 70)
	EXPRESSION -> EXPRESSION . '>=' EXPRESSION          (rule 71)
	EXPRESSION -> EXPRESSION . '==' EXPRESSION          (rule 72)
	EXPRESSION -> EXPRESSION . '!=' EXPRESSION          (rule 73)
	EXPRESSION -> EXPRESSION . and EXPRESSION           (rule 75)
	EXPRESSION -> EXPRESSION . or EXPRESSION            (rule 76)
	EXPRESSION -> '-' EXPRESSION .                      (rule 77)
	EXPRESSION -> EXPRESSION . '+' EXPRESSION           (rule 78)
	EXPRESSION -> EXPRESSION . '-' EXPRESSION           (rule 79)
	EXPRESSION -> EXPRESSION . '*' EXPRESSION           (rule 80)
	EXPRESSION -> EXPRESSION . '/' EXPRESSION           (rule 81)
	EXPRESSION -> EXPRESSION . '%' EXPRESSION           (rule 82)
	EXPRESSION -> EXPRESSION . mod EXPRESSION           (rule 83)
	EXPRESSION -> EXPRESSION . div EXPRESSION           (rule 84)

	youbegin       reduce using rule 77
	whereiend      reduce using rule 77
	';'            reduce using rule 77
	'}'            reduce using rule 77
	']'            reduce using rule 77
	mod            shift, and enter state 69
	div            shift, and enter state 70
	and            reduce using rule 77
	or             reduce using rule 77
	','            reduce using rule 77
	')'            reduce using rule 77
	'+'            reduce using rule 77
	'=='           reduce using rule 77
	'*'            shift, and enter state 75
	'-'            reduce using rule 77
	'%'            shift, and enter state 77
	'/'            shift, and enter state 78
	'!='           reduce using rule 77
	'>='           reduce using rule 77
	'<='           reduce using rule 77
	'>'            reduce using rule 77
	'<'            reduce using rule 77
	newline        reduce using rule 77


State 89

	EXPRESSION -> '(' EXPRESSION . ')'                  (rule 67)
	EXPRESSION -> EXPRESSION . '<' EXPRESSION           (rule 68)
	EXPRESSION -> EXPRESSION . '>' EXPRESSION           (rule 69)
	EXPRESSION -> EXPRESSION . '<=' EXPRESSION          (rule 70)
	EXPRESSION -> EXPRESSION . '>=' EXPRESSION          (rule 71)
	EXPRESSION -> EXPRESSION . '==' EXPRESSION          (rule 72)
	EXPRESSION -> EXPRESSION . '!=' EXPRESSION          (rule 73)
	EXPRESSION -> EXPRESSION . and EXPRESSION           (rule 75)
	EXPRESSION -> EXPRESSION . or EXPRESSION            (rule 76)
	EXPRESSION -> EXPRESSION . '+' EXPRESSION           (rule 78)
	EXPRESSION -> EXPRESSION . '-' EXPRESSION           (rule 79)
	EXPRESSION -> EXPRESSION . '*' EXPRESSION           (rule 80)
	EXPRESSION -> EXPRESSION . '/' EXPRESSION           (rule 81)
	EXPRESSION -> EXPRESSION . '%' EXPRESSION           (rule 82)
	EXPRESSION -> EXPRESSION . mod EXPRESSION           (rule 83)
	EXPRESSION -> EXPRESSION . div EXPRESSION           (rule 84)

	mod            shift, and enter state 69
	div            shift, and enter state 70
	and            shift, and enter state 71
	or             shift, and enter state 72
	')'            shift, and enter state 107
	'+'            shift, and enter state 73
	'=='           shift, and enter state 74
	'*'            shift, and enter state 75
	'-'            shift, and enter state 76
	'%'            shift, and enter state 77
	'/'            shift, and enter state 78
	'!='           shift, and enter state 79
	'>='           shift, and enter state 80
	'<='           shift, and enter state 81
	'>'            shift, and enter state 82
	'<'            shift, and enter state 83


State 90

	EXPRESSION -> EXPRESSION . '<' EXPRESSION           (rule 68)
	EXPRESSION -> EXPRESSION . '>' EXPRESSION           (rule 69)
	EXPRESSION -> EXPRESSION . '<=' EXPRESSION          (rule 70)
	EXPRESSION -> EXPRESSION . '>=' EXPRESSION          (rule 71)
	EXPRESSION -> EXPRESSION . '==' EXPRESSION          (rule 72)
	EXPRESSION -> EXPRESSION . '!=' EXPRESSION          (rule 73)
	EXPRESSION -> not EXPRESSION .                      (rule 74)
	EXPRESSION -> EXPRESSION . and EXPRESSION           (rule 75)
	EXPRESSION -> EXPRESSION . or EXPRESSION            (rule 76)
	EXPRESSION -> EXPRESSION . '+' EXPRESSION           (rule 78)
	EXPRESSION -> EXPRESSION . '-' EXPRESSION           (rule 79)
	EXPRESSION -> EXPRESSION . '*' EXPRESSION           (rule 80)
	EXPRESSION -> EXPRESSION . '/' EXPRESSION           (rule 81)
	EXPRESSION -> EXPRESSION . '%' EXPRESSION           (rule 82)
	EXPRESSION -> EXPRESSION . mod EXPRESSION           (rule 83)
	EXPRESSION -> EXPRESSION . div EXPRESSION           (rule 84)

	youbegin       reduce using rule 74
	whereiend      reduce using rule 74
	';'            reduce using rule 74
	'}'            reduce using rule 74
	']'            reduce using rule 74
	mod            reduce using rule 74
	div            reduce using rule 74
	and            reduce using rule 74
	or             reduce using rule 74
	','            reduce using rule 74
	')'            reduce using rule 74
	'+'            reduce using rule 74
	'=='           reduce using rule 74
	'*'            reduce using rule 74
	'-'            reduce using rule 74
	'%'            reduce using rule 74
	'/'            reduce using rule 74
	'!='           reduce using rule 74
	'>='           reduce using rule 74
	'<='           reduce using rule 74
	'>'            reduce using rule 74
	'<'            reduce using rule 74
	newline        reduce using rule 74


State 91

	EXPRESSION -> '^' id .                              (rule 89)

	youbegin       reduce using rule 89
	whereiend      reduce using rule 89
	';'            reduce using rule 89
	'}'            reduce using rule 89
	']'            reduce using rule 89
	mod            reduce using rule 89
	div            reduce using rule 89
	and            reduce using rule 89
	or             reduce using rule 89
	','            reduce using rule 89
	')'            reduce using rule 89
	'+'            reduce using rule 89
	'=='           reduce using rule 89
	'*'            reduce using rule 89
	'-'            reduce using rule 89
	'%'            reduce using rule 89
	'/'            reduce using rule 89
	'!='           reduce using rule 89
	'>='           reduce using rule 89
	'<='           reduce using rule 89
	'>'            reduce using rule 89
	'<'            reduce using rule 89
	newline        reduce using rule 89


State 92

	EXPRESSION -> newlife '(' . EXPRESSION ')'          (rule 88)

	newlife        shift, and enter state 56
	ok             shift, and enter state 57
	notok          shift, and enter state 58
	'^'            shift, and enter state 59
	not            shift, and enter state 60
	'('            shift, and enter state 61
	'-'            shift, and enter state 62
	id             shift, and enter state 63
	n              shift, and enter state 64
	string         shift, and enter state 65

	EXPRESSION     goto state 106
	ARRAYPOSITION  goto state 53
	EXPRESSIONSTRUCTgoto state 54
	FUNCTIONCALL   goto state 55

State 93

	DECLARATIONTYPE -> ID '=' EXPRESSION ',' . DECLARATIONTYPE    (rule 33)

	id             shift, and enter state 31

	DECLARATIONTYPEgoto state 105
	ID             goto state 30

State 94

	FUNCTIONPARAMETER -> TYPE id .                      (rule 18)

	','            reduce using rule 18
	')'            reduce using rule 18


State 95

	NONEMPTYLPARAMETERSFUNC -> FUNCTIONPARAMETER ',' . NONEMPTYLPARAMETERSFUNC    (rule 16)

	int            shift, and enter state 16
	float          shift, and enter state 17
	char           shift, and enter state 18
	boolean        shift, and enter state 19
	id             shift, and enter state 22
	string         shift, and enter state 23

	NONEMPTYLPARAMETERSFUNCgoto state 104
	FUNCTIONPARAMETERgoto state 50
	TYPE           goto state 51
	TYPE2          goto state 13

State 96

	FUNCTIONINIC -> dafunk id '(' LPARAMETERSFUNC ')' . ':' RETURNTYPE BLOCK    (rule 11)

	':'            shift, and enter state 103


State 97

	LDECLARATIONS -> DECLARATION .                      (rule 61)

	'}'            reduce using rule 61
	newline        reduce using rule 61


State 98

	DEFINESTRUCT -> band id id '{' LDECLARATIONS . '}'    (rule 58)
	LDECLARATIONS -> LDECLARATIONS . newline DECLARATION    (rule 60)

	'}'            shift, and enter state 102
	newline        shift, and enter state 101


State 99

	DEFINESTRUCT -> union id id '{' LDECLARATIONS . '}'    (rule 59)
	LDECLARATIONS -> LDECLARATIONS . newline DECLARATION    (rule 60)

	'}'            shift, and enter state 100
	newline        shift, and enter state 101


State 100

	DEFINESTRUCT -> union id id '{' LDECLARATIONS '}' .    (rule 59)

	newline        reduce using rule 59


State 101

	LDECLARATIONS -> LDECLARATIONS newline . DECLARATION    (rule 60)

	int            shift, and enter state 16
	float          shift, and enter state 17
	char           shift, and enter state 18
	boolean        shift, and enter state 19
	id             shift, and enter state 22
	string         shift, and enter state 23

	DECLARATION    goto state 135
	TYPE           goto state 12
	TYPE2          goto state 13

State 102

	DEFINESTRUCT -> band id id '{' LDECLARATIONS '}' .    (rule 58)

	newline        reduce using rule 58


State 103

	FUNCTIONINIC -> dafunk id '(' LPARAMETERSFUNC ')' ':' . RETURNTYPE BLOCK    (rule 11)

	intothevoid    shift, and enter state 134
	int            shift, and enter state 16
	float          shift, and enter state 17
	char           shift, and enter state 18
	boolean        shift, and enter state 19
	id             shift, and enter state 22
	string         shift, and enter state 23

	RETURNTYPE     goto state 132
	TYPE           goto state 133
	TYPE2          goto state 13

State 104

	NONEMPTYLPARAMETERSFUNC -> FUNCTIONPARAMETER ',' NONEMPTYLPARAMETERSFUNC .    (rule 16)

	')'            reduce using rule 16


State 105

	DECLARATIONTYPE -> ID '=' EXPRESSION ',' DECLARATIONTYPE .    (rule 33)

	whereiend      reduce using rule 33
	'}'            reduce using rule 33
	newline        reduce using rule 33


State 106

	EXPRESSION -> EXPRESSION . '<' EXPRESSION           (rule 68)
	EXPRESSION -> EXPRESSION . '>' EXPRESSION           (rule 69)
	EXPRESSION -> EXPRESSION . '<=' EXPRESSION          (rule 70)
	EXPRESSION -> EXPRESSION . '>=' EXPRESSION          (rule 71)
	EXPRESSION -> EXPRESSION . '==' EXPRESSION          (rule 72)
	EXPRESSION -> EXPRESSION . '!=' EXPRESSION          (rule 73)
	EXPRESSION -> EXPRESSION . and EXPRESSION           (rule 75)
	EXPRESSION -> EXPRESSION . or EXPRESSION            (rule 76)
	EXPRESSION -> EXPRESSION . '+' EXPRESSION           (rule 78)
	EXPRESSION -> EXPRESSION . '-' EXPRESSION           (rule 79)
	EXPRESSION -> EXPRESSION . '*' EXPRESSION           (rule 80)
	EXPRESSION -> EXPRESSION . '/' EXPRESSION           (rule 81)
	EXPRESSION -> EXPRESSION . '%' EXPRESSION           (rule 82)
	EXPRESSION -> EXPRESSION . mod EXPRESSION           (rule 83)
	EXPRESSION -> EXPRESSION . div EXPRESSION           (rule 84)
	EXPRESSION -> newlife '(' EXPRESSION . ')'          (rule 88)

	mod            shift, and enter state 69
	div            shift, and enter state 70
	and            shift, and enter state 71
	or             shift, and enter state 72
	')'            shift, and enter state 131
	'+'            shift, and enter state 73
	'=='           shift, and enter state 74
	'*'            shift, and enter state 75
	'-'            shift, and enter state 76
	'%'            shift, and enter state 77
	'/'            shift, and enter state 78
	'!='           shift, and enter state 79
	'>='           shift, and enter state 80
	'<='           shift, and enter state 81
	'>'            shift, and enter state 82
	'<'            shift, and enter state 83


State 107

	EXPRESSION -> '(' EXPRESSION ')' .                  (rule 67)

	youbegin       reduce using rule 67
	whereiend      reduce using rule 67
	';'            reduce using rule 67
	'}'            reduce using rule 67
	']'            reduce using rule 67
	mod            reduce using rule 67
	div            reduce using rule 67
	and            reduce using rule 67
	or             reduce using rule 67
	','            reduce using rule 67
	')'            reduce using rule 67
	'+'            reduce using rule 67
	'=='           reduce using rule 67
	'*'            reduce using rule 67
	'-'            reduce using rule 67
	'%'            reduce using rule 67
	'/'            reduce using rule 67
	'!='           reduce using rule 67
	'>='           reduce using rule 67
	'<='           reduce using rule 67
	'>'            reduce using rule 67
	'<'            reduce using rule 67
	newline        reduce using rule 67


State 108

	EXPRESSION -> EXPRESSION . '<' EXPRESSION           (rule 68)
	EXPRESSION -> EXPRESSION . '>' EXPRESSION           (rule 69)
	EXPRESSION -> EXPRESSION . '<=' EXPRESSION          (rule 70)
	EXPRESSION -> EXPRESSION . '>=' EXPRESSION          (rule 71)
	EXPRESSION -> EXPRESSION . '==' EXPRESSION          (rule 72)
	EXPRESSION -> EXPRESSION . '!=' EXPRESSION          (rule 73)
	EXPRESSION -> EXPRESSION . and EXPRESSION           (rule 75)
	EXPRESSION -> EXPRESSION . or EXPRESSION            (rule 76)
	EXPRESSION -> EXPRESSION . '+' EXPRESSION           (rule 78)
	EXPRESSION -> EXPRESSION . '-' EXPRESSION           (rule 79)
	EXPRESSION -> EXPRESSION . '*' EXPRESSION           (rule 80)
	EXPRESSION -> EXPRESSION . '/' EXPRESSION           (rule 81)
	EXPRESSION -> EXPRESSION . '%' EXPRESSION           (rule 82)
	EXPRESSION -> EXPRESSION . mod EXPRESSION           (rule 83)
	EXPRESSION -> EXPRESSION . div EXPRESSION           (rule 84)
	EXPRESSION -> id '=' EXPRESSION .                   (rule 90)

	youbegin       reduce using rule 90
	whereiend      reduce using rule 90
	';'            reduce using rule 90
	'}'            reduce using rule 90
	']'            reduce using rule 90
	mod            reduce using rule 90
	div            reduce using rule 90
	and            reduce using rule 90
	or             reduce using rule 90
	','            reduce using rule 90
	')'            reduce using rule 90
	'+'            reduce using rule 90
	'=='           reduce using rule 90
	'*'            reduce using rule 90
	'-'            reduce using rule 90
	'%'            reduce using rule 90
	'/'            reduce using rule 90
	'!='           reduce using rule 90
	'>='           reduce using rule 90
	'<='           reduce using rule 90
	'>'            reduce using rule 90
	'<'            reduce using rule 90
	newline        reduce using rule 90


State 109

	FUNCTIONCALL -> id '(' IDS . ')'                    (rule 94)

	')'            shift, and enter state 130


State 110

	EXPRESSIONSTRUCT -> id '.' id .                     (rule 93)

	youbegin       reduce using rule 93
	whereiend      reduce using rule 93
	';'            reduce using rule 93
	'}'            reduce using rule 93
	']'            reduce using rule 93
	mod            reduce using rule 93
	div            reduce using rule 93
	and            reduce using rule 93
	or             reduce using rule 93
	','            reduce using rule 93
	')'            reduce using rule 93
	'+'            reduce using rule 93
	'=='           reduce using rule 93
	'*'            reduce using rule 93
	'-'            reduce using rule 93
	'%'            reduce using rule 93
	'/'            reduce using rule 93
	'!='           reduce using rule 93
	'>='           reduce using rule 93
	'<='           reduce using rule 93
	'>'            reduce using rule 93
	'<'            reduce using rule 93
	newline        reduce using rule 93


State 111

	ARRAYPOSITION -> id '[' id . ']'                    (rule 92)

	']'            shift, and enter state 129


State 112

	ARRAYPOSITION -> id '[' n . ']'                     (rule 91)

	']'            shift, and enter state 128


State 113

	EXPRESSION -> EXPRESSION . '<' EXPRESSION           (rule 68)
	EXPRESSION -> EXPRESSION '<' EXPRESSION .           (rule 68)
	EXPRESSION -> EXPRESSION . '>' EXPRESSION           (rule 69)
	EXPRESSION -> EXPRESSION . '<=' EXPRESSION          (rule 70)
	EXPRESSION -> EXPRESSION . '>=' EXPRESSION          (rule 71)
	EXPRESSION -> EXPRESSION . '==' EXPRESSION          (rule 72)
	EXPRESSION -> EXPRESSION . '!=' EXPRESSION          (rule 73)
	EXPRESSION -> EXPRESSION . and EXPRESSION           (rule 75)
	EXPRESSION -> EXPRESSION . or EXPRESSION            (rule 76)
	EXPRESSION -> EXPRESSION . '+' EXPRESSION           (rule 78)
	EXPRESSION -> EXPRESSION . '-' EXPRESSION           (rule 79)
	EXPRESSION -> EXPRESSION . '*' EXPRESSION           (rule 80)
	EXPRESSION -> EXPRESSION . '/' EXPRESSION           (rule 81)
	EXPRESSION -> EXPRESSION . '%' EXPRESSION           (rule 82)
	EXPRESSION -> EXPRESSION . mod EXPRESSION           (rule 83)
	EXPRESSION -> EXPRESSION . div EXPRESSION           (rule 84)

	youbegin       reduce using rule 68
	whereiend      reduce using rule 68
	';'            reduce using rule 68
	'}'            reduce using rule 68
	']'            reduce using rule 68
	mod            shift, and enter state 69
	div            shift, and enter state 70
	and            reduce using rule 68
	or             reduce using rule 68
	','            reduce using rule 68
	')'            reduce using rule 68
	'+'            shift, and enter state 73
	'=='           fail
	'*'            shift, and enter state 75
	'-'            shift, and enter state 76
	'%'            shift, and enter state 77
	'/'            shift, and enter state 78
	'!='           fail
	'>='           fail
	'<='           fail
	'>'            fail
	'<'            fail
	newline        reduce using rule 68


State 114

	EXPRESSION -> EXPRESSION . '<' EXPRESSION           (rule 68)
	EXPRESSION -> EXPRESSION . '>' EXPRESSION           (rule 69)
	EXPRESSION -> EXPRESSION '>' EXPRESSION .           (rule 69)
	EXPRESSION -> EXPRESSION . '<=' EXPRESSION          (rule 70)
	EXPRESSION -> EXPRESSION . '>=' EXPRESSION          (rule 71)
	EXPRESSION -> EXPRESSION . '==' EXPRESSION          (rule 72)
	EXPRESSION -> EXPRESSION . '!=' EXPRESSION          (rule 73)
	EXPRESSION -> EXPRESSION . and EXPRESSION           (rule 75)
	EXPRESSION -> EXPRESSION . or EXPRESSION            (rule 76)
	EXPRESSION -> EXPRESSION . '+' EXPRESSION           (rule 78)
	EXPRESSION -> EXPRESSION . '-' EXPRESSION           (rule 79)
	EXPRESSION -> EXPRESSION . '*' EXPRESSION           (rule 80)
	EXPRESSION -> EXPRESSION . '/' EXPRESSION           (rule 81)
	EXPRESSION -> EXPRESSION . '%' EXPRESSION           (rule 82)
	EXPRESSION -> EXPRESSION . mod EXPRESSION           (rule 83)
	EXPRESSION -> EXPRESSION . div EXPRESSION           (rule 84)

	youbegin       reduce using rule 69
	whereiend      reduce using rule 69
	';'            reduce using rule 69
	'}'            reduce using rule 69
	']'            reduce using rule 69
	mod            shift, and enter state 69
	div            shift, and enter state 70
	and            reduce using rule 69
	or             reduce using rule 69
	','            reduce using rule 69
	')'            reduce using rule 69
	'+'            shift, and enter state 73
	'=='           fail
	'*'            shift, and enter state 75
	'-'            shift, and enter state 76
	'%'            shift, and enter state 77
	'/'            shift, and enter state 78
	'!='           fail
	'>='           fail
	'<='           fail
	'>'            fail
	'<'            fail
	newline        reduce using rule 69


State 115

	EXPRESSION -> EXPRESSION . '<' EXPRESSION           (rule 68)
	EXPRESSION -> EXPRESSION . '>' EXPRESSION           (rule 69)
	EXPRESSION -> EXPRESSION . '<=' EXPRESSION          (rule 70)
	EXPRESSION -> EXPRESSION '<=' EXPRESSION .          (rule 70)
	EXPRESSION -> EXPRESSION . '>=' EXPRESSION          (rule 71)
	EXPRESSION -> EXPRESSION . '==' EXPRESSION          (rule 72)
	EXPRESSION -> EXPRESSION . '!=' EXPRESSION          (rule 73)
	EXPRESSION -> EXPRESSION . and EXPRESSION           (rule 75)
	EXPRESSION -> EXPRESSION . or EXPRESSION            (rule 76)
	EXPRESSION -> EXPRESSION . '+' EXPRESSION           (rule 78)
	EXPRESSION -> EXPRESSION . '-' EXPRESSION           (rule 79)
	EXPRESSION -> EXPRESSION . '*' EXPRESSION           (rule 80)
	EXPRESSION -> EXPRESSION . '/' EXPRESSION           (rule 81)
	EXPRESSION -> EXPRESSION . '%' EXPRESSION           (rule 82)
	EXPRESSION -> EXPRESSION . mod EXPRESSION           (rule 83)
	EXPRESSION -> EXPRESSION . div EXPRESSION           (rule 84)

	youbegin       reduce using rule 70
	whereiend      reduce using rule 70
	';'            reduce using rule 70
	'}'            reduce using rule 70
	']'            reduce using rule 70
	mod            shift, and enter state 69
	div            shift, and enter state 70
	and            reduce using rule 70
	or             reduce using rule 70
	','            reduce using rule 70
	')'            reduce using rule 70
	'+'            shift, and enter state 73
	'=='           fail
	'*'            shift, and enter state 75
	'-'            shift, and enter state 76
	'%'            shift, and enter state 77
	'/'            shift, and enter state 78
	'!='           fail
	'>='           fail
	'<='           fail
	'>'            fail
	'<'            fail
	newline        reduce using rule 70


State 116

	EXPRESSION -> EXPRESSION . '<' EXPRESSION           (rule 68)
	EXPRESSION -> EXPRESSION . '>' EXPRESSION           (rule 69)
	EXPRESSION -> EXPRESSION . '<=' EXPRESSION          (rule 70)
	EXPRESSION -> EXPRESSION . '>=' EXPRESSION          (rule 71)
	EXPRESSION -> EXPRESSION '>=' EXPRESSION .          (rule 71)
	EXPRESSION -> EXPRESSION . '==' EXPRESSION          (rule 72)
	EXPRESSION -> EXPRESSION . '!=' EXPRESSION          (rule 73)
	EXPRESSION -> EXPRESSION . and EXPRESSION           (rule 75)
	EXPRESSION -> EXPRESSION . or EXPRESSION            (rule 76)
	EXPRESSION -> EXPRESSION . '+' EXPRESSION           (rule 78)
	EXPRESSION -> EXPRESSION . '-' EXPRESSION           (rule 79)
	EXPRESSION -> EXPRESSION . '*' EXPRESSION           (rule 80)
	EXPRESSION -> EXPRESSION . '/' EXPRESSION           (rule 81)
	EXPRESSION -> EXPRESSION . '%' EXPRESSION           (rule 82)
	EXPRESSION -> EXPRESSION . mod EXPRESSION           (rule 83)
	EXPRESSION -> EXPRESSION . div EXPRESSION           (rule 84)

	youbegin       reduce using rule 71
	whereiend      reduce using rule 71
	';'            reduce using rule 71
	'}'            reduce using rule 71
	']'            reduce using rule 71
	mod            shift, and enter state 69
	div            shift, and enter state 70
	and            reduce using rule 71
	or             reduce using rule 71
	','            reduce using rule 71
	')'            reduce using rule 71
	'+'            shift, and enter state 73
	'=='           fail
	'*'            shift, and enter state 75
	'-'            shift, and enter state 76
	'%'            shift, and enter state 77
	'/'            shift, and enter state 78
	'!='           fail
	'>='           fail
	'<='           fail
	'>'            fail
	'<'            fail
	newline        reduce using rule 71


State 117

	EXPRESSION -> EXPRESSION . '<' EXPRESSION           (rule 68)
	EXPRESSION -> EXPRESSION . '>' EXPRESSION           (rule 69)
	EXPRESSION -> EXPRESSION . '<=' EXPRESSION          (rule 70)
	EXPRESSION -> EXPRESSION . '>=' EXPRESSION          (rule 71)
	EXPRESSION -> EXPRESSION . '==' EXPRESSION          (rule 72)
	EXPRESSION -> EXPRESSION . '!=' EXPRESSION          (rule 73)
	EXPRESSION -> EXPRESSION '!=' EXPRESSION .          (rule 73)
	EXPRESSION -> EXPRESSION . and EXPRESSION           (rule 75)
	EXPRESSION -> EXPRESSION . or EXPRESSION            (rule 76)
	EXPRESSION -> EXPRESSION . '+' EXPRESSION           (rule 78)
	EXPRESSION -> EXPRESSION . '-' EXPRESSION           (rule 79)
	EXPRESSION -> EXPRESSION . '*' EXPRESSION           (rule 80)
	EXPRESSION -> EXPRESSION . '/' EXPRESSION           (rule 81)
	EXPRESSION -> EXPRESSION . '%' EXPRESSION           (rule 82)
	EXPRESSION -> EXPRESSION . mod EXPRESSION           (rule 83)
	EXPRESSION -> EXPRESSION . div EXPRESSION           (rule 84)

	youbegin       reduce using rule 73
	whereiend      reduce using rule 73
	';'            reduce using rule 73
	'}'            reduce using rule 73
	']'            reduce using rule 73
	mod            shift, and enter state 69
	div            shift, and enter state 70
	and            reduce using rule 73
	or             reduce using rule 73
	','            reduce using rule 73
	')'            reduce using rule 73
	'+'            shift, and enter state 73
	'=='           fail
	'*'            shift, and enter state 75
	'-'            shift, and enter state 76
	'%'            shift, and enter state 77
	'/'            shift, and enter state 78
	'!='           fail
	'>='           fail
	'<='           fail
	'>'            fail
	'<'            fail
	newline        reduce using rule 73


State 118

	EXPRESSION -> EXPRESSION . '<' EXPRESSION           (rule 68)
	EXPRESSION -> EXPRESSION . '>' EXPRESSION           (rule 69)
	EXPRESSION -> EXPRESSION . '<=' EXPRESSION          (rule 70)
	EXPRESSION -> EXPRESSION . '>=' EXPRESSION          (rule 71)
	EXPRESSION -> EXPRESSION . '==' EXPRESSION          (rule 72)
	EXPRESSION -> EXPRESSION . '!=' EXPRESSION          (rule 73)
	EXPRESSION -> EXPRESSION . and EXPRESSION           (rule 75)
	EXPRESSION -> EXPRESSION . or EXPRESSION            (rule 76)
	EXPRESSION -> EXPRESSION . '+' EXPRESSION           (rule 78)
	EXPRESSION -> EXPRESSION . '-' EXPRESSION           (rule 79)
	EXPRESSION -> EXPRESSION . '*' EXPRESSION           (rule 80)
	EXPRESSION -> EXPRESSION . '/' EXPRESSION           (rule 81)
	EXPRESSION -> EXPRESSION '/' EXPRESSION .           (rule 81)
	EXPRESSION -> EXPRESSION . '%' EXPRESSION           (rule 82)
	EXPRESSION -> EXPRESSION . mod EXPRESSION           (rule 83)
	EXPRESSION -> EXPRESSION . div EXPRESSION           (rule 84)

	youbegin       reduce using rule 81
	whereiend      reduce using rule 81
	';'            reduce using rule 81
	'}'            reduce using rule 81
	']'            reduce using rule 81
	mod            reduce using rule 81
	div            reduce using rule 81
	and            reduce using rule 81
	or             reduce using rule 81
	','            reduce using rule 81
	')'            reduce using rule 81
	'+'            reduce using rule 81
	'=='           reduce using rule 81
	'*'            reduce using rule 81
	'-'            reduce using rule 81
	'%'            reduce using rule 81
	'/'            reduce using rule 81
	'!='           reduce using rule 81
	'>='           reduce using rule 81
	'<='           reduce using rule 81
	'>'            reduce using rule 81
	'<'            reduce using rule 81
	newline        reduce using rule 81


State 119

	EXPRESSION -> EXPRESSION . '<' EXPRESSION           (rule 68)
	EXPRESSION -> EXPRESSION . '>' EXPRESSION           (rule 69)
	EXPRESSION -> EXPRESSION . '<=' EXPRESSION          (rule 70)
	EXPRESSION -> EXPRESSION . '>=' EXPRESSION          (rule 71)
	EXPRESSION -> EXPRESSION . '==' EXPRESSION          (rule 72)
	EXPRESSION -> EXPRESSION . '!=' EXPRESSION          (rule 73)
	EXPRESSION -> EXPRESSION . and EXPRESSION           (rule 75)
	EXPRESSION -> EXPRESSION . or EXPRESSION            (rule 76)
	EXPRESSION -> EXPRESSION . '+' EXPRESSION           (rule 78)
	EXPRESSION -> EXPRESSION . '-' EXPRESSION           (rule 79)
	EXPRESSION -> EXPRESSION . '*' EXPRESSION           (rule 80)
	EXPRESSION -> EXPRESSION . '/' EXPRESSION           (rule 81)
	EXPRESSION -> EXPRESSION . '%' EXPRESSION           (rule 82)
	EXPRESSION -> EXPRESSION '%' EXPRESSION .           (rule 82)
	EXPRESSION -> EXPRESSION . mod EXPRESSION           (rule 83)
	EXPRESSION -> EXPRESSION . div EXPRESSION           (rule 84)

	youbegin       reduce using rule 82
	whereiend      reduce using rule 82
	';'            reduce using rule 82
	'}'            reduce using rule 82
	']'            reduce using rule 82
	mod            reduce using rule 82
	div            reduce using rule 82
	and            reduce using rule 82
	or             reduce using rule 82
	','            reduce using rule 82
	')'            reduce using rule 82
	'+'            reduce using rule 82
	'=='           reduce using rule 82
	'*'            reduce using rule 82
	'-'            reduce using rule 82
	'%'            reduce using rule 82
	'/'            reduce using rule 82
	'!='           reduce using rule 82
	'>='           reduce using rule 82
	'<='           reduce using rule 82
	'>'            reduce using rule 82
	'<'            reduce using rule 82
	newline        reduce using rule 82


State 120

	EXPRESSION -> EXPRESSION . '<' EXPRESSION           (rule 68)
	EXPRESSION -> EXPRESSION . '>' EXPRESSION           (rule 69)
	EXPRESSION -> EXPRESSION . '<=' EXPRESSION          (rule 70)
	EXPRESSION -> EXPRESSION . '>=' EXPRESSION          (rule 71)
	EXPRESSION -> EXPRESSION . '==' EXPRESSION          (rule 72)
	EXPRESSION -> EXPRESSION . '!=' EXPRESSION          (rule 73)
	EXPRESSION -> EXPRESSION . and EXPRESSION           (rule 75)
	EXPRESSION -> EXPRESSION . or EXPRESSION            (rule 76)
	EXPRESSION -> EXPRESSION . '+' EXPRESSION           (rule 78)
	EXPRESSION -> EXPRESSION . '-' EXPRESSION           (rule 79)
	EXPRESSION -> EXPRESSION '-' EXPRESSION .           (rule 79)
	EXPRESSION -> EXPRESSION . '*' EXPRESSION           (rule 80)
	EXPRESSION -> EXPRESSION . '/' EXPRESSION           (rule 81)
	EXPRESSION -> EXPRESSION . '%' EXPRESSION           (rule 82)
	EXPRESSION -> EXPRESSION . mod EXPRESSION           (rule 83)
	EXPRESSION -> EXPRESSION . div EXPRESSION           (rule 84)

	youbegin       reduce using rule 79
	whereiend      reduce using rule 79
	';'            reduce using rule 79
	'}'            reduce using rule 79
	']'            reduce using rule 79
	mod            shift, and enter state 69
	div            shift, and enter state 70
	and            reduce using rule 79
	or             reduce using rule 79
	','            reduce using rule 79
	')'            reduce using rule 79
	'+'            reduce using rule 79
	'=='           reduce using rule 79
	'*'            shift, and enter state 75
	'-'            reduce using rule 79
	'%'            shift, and enter state 77
	'/'            shift, and enter state 78
	'!='           reduce using rule 79
	'>='           reduce using rule 79
	'<='           reduce using rule 79
	'>'            reduce using rule 79
	'<'            reduce using rule 79
	newline        reduce using rule 79


State 121

	EXPRESSION -> EXPRESSION . '<' EXPRESSION           (rule 68)
	EXPRESSION -> EXPRESSION . '>' EXPRESSION           (rule 69)
	EXPRESSION -> EXPRESSION . '<=' EXPRESSION          (rule 70)
	EXPRESSION -> EXPRESSION . '>=' EXPRESSION          (rule 71)
	EXPRESSION -> EXPRESSION . '==' EXPRESSION          (rule 72)
	EXPRESSION -> EXPRESSION . '!=' EXPRESSION          (rule 73)
	EXPRESSION -> EXPRESSION . and EXPRESSION           (rule 75)
	EXPRESSION -> EXPRESSION . or EXPRESSION            (rule 76)
	EXPRESSION -> EXPRESSION . '+' EXPRESSION           (rule 78)
	EXPRESSION -> EXPRESSION . '-' EXPRESSION           (rule 79)
	EXPRESSION -> EXPRESSION . '*' EXPRESSION           (rule 80)
	EXPRESSION -> EXPRESSION '*' EXPRESSION .           (rule 80)
	EXPRESSION -> EXPRESSION . '/' EXPRESSION           (rule 81)
	EXPRESSION -> EXPRESSION . '%' EXPRESSION           (rule 82)
	EXPRESSION -> EXPRESSION . mod EXPRESSION           (rule 83)
	EXPRESSION -> EXPRESSION . div EXPRESSION           (rule 84)

	youbegin       reduce using rule 80
	whereiend      reduce using rule 80
	';'            reduce using rule 80
	'}'            reduce using rule 80
	']'            reduce using rule 80
	mod            reduce using rule 80
	div            reduce using rule 80
	and            reduce using rule 80
	or             reduce using rule 80
	','            reduce using rule 80
	')'            reduce using rule 80
	'+'            reduce using rule 80
	'=='           reduce using rule 80
	'*'            reduce using rule 80
	'-'            reduce using rule 80
	'%'            reduce using rule 80
	'/'            reduce using rule 80
	'!='           reduce using rule 80
	'>='           reduce using rule 80
	'<='           reduce using rule 80
	'>'            reduce using rule 80
	'<'            reduce using rule 80
	newline        reduce using rule 80


State 122

	EXPRESSION -> EXPRESSION . '<' EXPRESSION           (rule 68)
	EXPRESSION -> EXPRESSION . '>' EXPRESSION           (rule 69)
	EXPRESSION -> EXPRESSION . '<=' EXPRESSION          (rule 70)
	EXPRESSION -> EXPRESSION . '>=' EXPRESSION          (rule 71)
	EXPRESSION -> EXPRESSION . '==' EXPRESSION          (rule 72)
	EXPRESSION -> EXPRESSION '==' EXPRESSION .          (rule 72)
	EXPRESSION -> EXPRESSION . '!=' EXPRESSION          (rule 73)
	EXPRESSION -> EXPRESSION . and EXPRESSION           (rule 75)
	EXPRESSION -> EXPRESSION . or EXPRESSION            (rule 76)
	EXPRESSION -> EXPRESSION . '+' EXPRESSION           (rule 78)
	EXPRESSION -> EXPRESSION . '-' EXPRESSION           (rule 79)
	EXPRESSION -> EXPRESSION . '*' EXPRESSION           (rule 80)
	EXPRESSION -> EXPRESSION . '/' EXPRESSION           (rule 81)
	EXPRESSION -> EXPRESSION . '%' EXPRESSION           (rule 82)
	EXPRESSION -> EXPRESSION . mod EXPRESSION           (rule 83)
	EXPRESSION -> EXPRESSION . div EXPRESSION           (rule 84)

	youbegin       reduce using rule 72
	whereiend      reduce using rule 72
	';'            reduce using rule 72
	'}'            reduce using rule 72
	']'            reduce using rule 72
	mod            shift, and enter state 69
	div            shift, and enter state 70
	and            reduce using rule 72
	or             reduce using rule 72
	','            reduce using rule 72
	')'            reduce using rule 72
	'+'            shift, and enter state 73
	'=='           fail
	'*'            shift, and enter state 75
	'-'            shift, and enter state 76
	'%'            shift, and enter state 77
	'/'            shift, and enter state 78
	'!='           fail
	'>='           fail
	'<='           fail
	'>'            fail
	'<'            fail
	newline        reduce using rule 72


State 123

	EXPRESSION -> EXPRESSION . '<' EXPRESSION           (rule 68)
	EXPRESSION -> EXPRESSION . '>' EXPRESSION           (rule 69)
	EXPRESSION -> EXPRESSION . '<=' EXPRESSION          (rule 70)
	EXPRESSION -> EXPRESSION . '>=' EXPRESSION          (rule 71)
	EXPRESSION -> EXPRESSION . '==' EXPRESSION          (rule 72)
	EXPRESSION -> EXPRESSION . '!=' EXPRESSION          (rule 73)
	EXPRESSION -> EXPRESSION . and EXPRESSION           (rule 75)
	EXPRESSION -> EXPRESSION . or EXPRESSION            (rule 76)
	EXPRESSION -> EXPRESSION . '+' EXPRESSION           (rule 78)
	EXPRESSION -> EXPRESSION '+' EXPRESSION .           (rule 78)
	EXPRESSION -> EXPRESSION . '-' EXPRESSION           (rule 79)
	EXPRESSION -> EXPRESSION . '*' EXPRESSION           (rule 80)
	EXPRESSION -> EXPRESSION . '/' EXPRESSION           (rule 81)
	EXPRESSION -> EXPRESSION . '%' EXPRESSION           (rule 82)
	EXPRESSION -> EXPRESSION . mod EXPRESSION           (rule 83)
	EXPRESSION -> EXPRESSION . div EXPRESSION           (rule 84)

	youbegin       reduce using rule 78
	whereiend      reduce using rule 78
	';'            reduce using rule 78
	'}'            reduce using rule 78
	']'            reduce using rule 78
	mod            shift, and enter state 69
	div            shift, and enter state 70
	and            reduce using rule 78
	or             reduce using rule 78
	','            reduce using rule 78
	')'            reduce using rule 78
	'+'            reduce using rule 78
	'=='           reduce using rule 78
	'*'            shift, and enter state 75
	'-'            reduce using rule 78
	'%'            shift, and enter state 77
	'/'            shift, and enter state 78
	'!='           reduce using rule 78
	'>='           reduce using rule 78
	'<='           reduce using rule 78
	'>'            reduce using rule 78
	'<'            reduce using rule 78
	newline        reduce using rule 78


State 124

	EXPRESSION -> EXPRESSION . '<' EXPRESSION           (rule 68)
	EXPRESSION -> EXPRESSION . '>' EXPRESSION           (rule 69)
	EXPRESSION -> EXPRESSION . '<=' EXPRESSION          (rule 70)
	EXPRESSION -> EXPRESSION . '>=' EXPRESSION          (rule 71)
	EXPRESSION -> EXPRESSION . '==' EXPRESSION          (rule 72)
	EXPRESSION -> EXPRESSION . '!=' EXPRESSION          (rule 73)
	EXPRESSION -> EXPRESSION . and EXPRESSION           (rule 75)
	EXPRESSION -> EXPRESSION . or EXPRESSION            (rule 76)
	EXPRESSION -> EXPRESSION or EXPRESSION .            (rule 76)
	EXPRESSION -> EXPRESSION . '+' EXPRESSION           (rule 78)
	EXPRESSION -> EXPRESSION . '-' EXPRESSION           (rule 79)
	EXPRESSION -> EXPRESSION . '*' EXPRESSION           (rule 80)
	EXPRESSION -> EXPRESSION . '/' EXPRESSION           (rule 81)
	EXPRESSION -> EXPRESSION . '%' EXPRESSION           (rule 82)
	EXPRESSION -> EXPRESSION . mod EXPRESSION           (rule 83)
	EXPRESSION -> EXPRESSION . div EXPRESSION           (rule 84)

	youbegin       reduce using rule 76
	whereiend      reduce using rule 76
	';'            reduce using rule 76
	'}'            reduce using rule 76
	']'            reduce using rule 76
	mod            shift, and enter state 69
	div            shift, and enter state 70
	and            shift, and enter state 71
	or             reduce using rule 76
	','            reduce using rule 76
	')'            reduce using rule 76
	'+'            shift, and enter state 73
	'=='           shift, and enter state 74
	'*'            shift, and enter state 75
	'-'            shift, and enter state 76
	'%'            shift, and enter state 77
	'/'            shift, and enter state 78
	'!='           shift, and enter state 79
	'>='           shift, and enter state 80
	'<='           shift, and enter state 81
	'>'            shift, and enter state 82
	'<'            shift, and enter state 83
	newline        reduce using rule 76


State 125

	EXPRESSION -> EXPRESSION . '<' EXPRESSION           (rule 68)
	EXPRESSION -> EXPRESSION . '>' EXPRESSION           (rule 69)
	EXPRESSION -> EXPRESSION . '<=' EXPRESSION          (rule 70)
	EXPRESSION -> EXPRESSION . '>=' EXPRESSION          (rule 71)
	EXPRESSION -> EXPRESSION . '==' EXPRESSION          (rule 72)
	EXPRESSION -> EXPRESSION . '!=' EXPRESSION          (rule 73)
	EXPRESSION -> EXPRESSION . and EXPRESSION           (rule 75)
	EXPRESSION -> EXPRESSION and EXPRESSION .           (rule 75)
	EXPRESSION -> EXPRESSION . or EXPRESSION            (rule 76)
	EXPRESSION -> EXPRESSION . '+' EXPRESSION           (rule 78)
	EXPRESSION -> EXPRESSION . '-' EXPRESSION           (rule 79)
	EXPRESSION -> EXPRESSION . '*' EXPRESSION           (rule 80)
	EXPRESSION -> EXPRESSION . '/' EXPRESSION           (rule 81)
	EXPRESSION -> EXPRESSION . '%' EXPRESSION           (rule 82)
	EXPRESSION -> EXPRESSION . mod EXPRESSION           (rule 83)
	EXPRESSION -> EXPRESSION . div EXPRESSION           (rule 84)

	youbegin       reduce using rule 75
	whereiend      reduce using rule 75
	';'            reduce using rule 75
	'}'            reduce using rule 75
	']'            reduce using rule 75
	mod            shift, and enter state 69
	div            shift, and enter state 70
	and            reduce using rule 75
	or             reduce using rule 75
	','            reduce using rule 75
	')'            reduce using rule 75
	'+'            shift, and enter state 73
	'=='           shift, and enter state 74
	'*'            shift, and enter state 75
	'-'            shift, and enter state 76
	'%'            shift, and enter state 77
	'/'            shift, and enter state 78
	'!='           shift, and enter state 79
	'>='           shift, and enter state 80
	'<='           shift, and enter state 81
	'>'            shift, and enter state 82
	'<'            shift, and enter state 83
	newline        reduce using rule 75


State 126

	EXPRESSION -> EXPRESSION . '<' EXPRESSION           (rule 68)
	EXPRESSION -> EXPRESSION . '>' EXPRESSION           (rule 69)
	EXPRESSION -> EXPRESSION . '<=' EXPRESSION          (rule 70)
	EXPRESSION -> EXPRESSION . '>=' EXPRESSION          (rule 71)
	EXPRESSION -> EXPRESSION . '==' EXPRESSION          (rule 72)
	EXPRESSION -> EXPRESSION . '!=' EXPRESSION          (rule 73)
	EXPRESSION -> EXPRESSION . and EXPRESSION           (rule 75)
	EXPRESSION -> EXPRESSION . or EXPRESSION            (rule 76)
	EXPRESSION -> EXPRESSION . '+' EXPRESSION           (rule 78)
	EXPRESSION -> EXPRESSION . '-' EXPRESSION           (rule 79)
	EXPRESSION -> EXPRESSION . '*' EXPRESSION           (rule 80)
	EXPRESSION -> EXPRESSION . '/' EXPRESSION           (rule 81)
	EXPRESSION -> EXPRESSION . '%' EXPRESSION           (rule 82)
	EXPRESSION -> EXPRESSION . mod EXPRESSION           (rule 83)
	EXPRESSION -> EXPRESSION . div EXPRESSION           (rule 84)
	EXPRESSION -> EXPRESSION div EXPRESSION .           (rule 84)

	youbegin       reduce using rule 84
	whereiend      reduce using rule 84
	';'            reduce using rule 84
	'}'            reduce using rule 84
	']'            reduce using rule 84
	mod            reduce using rule 84
	div            reduce using rule 84
	and            reduce using rule 84
	or             reduce using rule 84
	','            reduce using rule 84
	')'            reduce using rule 84
	'+'            reduce using rule 84
	'=='           reduce using rule 84
	'*'            reduce using rule 84
	'-'            reduce using rule 84
	'%'            reduce using rule 84
	'/'            reduce using rule 84
	'!='           reduce using rule 84
	'>='           reduce using rule 84
	'<='           reduce using rule 84
	'>'            reduce using rule 84
	'<'            reduce using rule 84
	newline        reduce using rule 84


State 127

	EXPRESSION -> EXPRESSION . '<' EXPRESSION           (rule 68)
	EXPRESSION -> EXPRESSION . '>' EXPRESSION           (rule 69)
	EXPRESSION -> EXPRESSION . '<=' EXPRESSION          (rule 70)
	EXPRESSION -> EXPRESSION . '>=' EXPRESSION          (rule 71)
	EXPRESSION -> EXPRESSION . '==' EXPRESSION          (rule 72)
	EXPRESSION -> EXPRESSION . '!=' EXPRESSION          (rule 73)
	EXPRESSION -> EXPRESSION . and EXPRESSION           (rule 75)
	EXPRESSION -> EXPRESSION . or EXPRESSION            (rule 76)
	EXPRESSION -> EXPRESSION . '+' EXPRESSION           (rule 78)
	EXPRESSION -> EXPRESSION . '-' EXPRESSION           (rule 79)
	EXPRESSION -> EXPRESSION . '*' EXPRESSION           (rule 80)
	EXPRESSION -> EXPRESSION . '/' EXPRESSION           (rule 81)
	EXPRESSION -> EXPRESSION . '%' EXPRESSION           (rule 82)
	EXPRESSION -> EXPRESSION . mod EXPRESSION           (rule 83)
	EXPRESSION -> EXPRESSION mod EXPRESSION .           (rule 83)
	EXPRESSION -> EXPRESSION . div EXPRESSION           (rule 84)

	youbegin       reduce using rule 83
	whereiend      reduce using rule 83
	';'            reduce using rule 83
	'}'            reduce using rule 83
	']'            reduce using rule 83
	mod            reduce using rule 83
	div            reduce using rule 83
	and            reduce using rule 83
	or             reduce using rule 83
	','            reduce using rule 83
	')'            reduce using rule 83
	'+'            reduce using rule 83
	'=='           reduce using rule 83
	'*'            reduce using rule 83
	'-'            reduce using rule 83
	'%'            reduce using rule 83
	'/'            reduce using rule 83
	'!='           reduce using rule 83
	'>='           reduce using rule 83
	'<='           reduce using rule 83
	'>'            reduce using rule 83
	'<'            reduce using rule 83
	newline        reduce using rule 83


State 128

	ARRAYPOSITION -> id '[' n ']' .                     (rule 91)

	youbegin       reduce using rule 91
	whereiend      reduce using rule 91
	';'            reduce using rule 91
	'}'            reduce using rule 91
	']'            reduce using rule 91
	mod            reduce using rule 91
	div            reduce using rule 91
	and            reduce using rule 91
	or             reduce using rule 91
	','            reduce using rule 91
	')'            reduce using rule 91
	'+'            reduce using rule 91
	'=='           reduce using rule 91
	'*'            reduce using rule 91
	'-'            reduce using rule 91
	'%'            reduce using rule 91
	'/'            reduce using rule 91
	'!='           reduce using rule 91
	'>='           reduce using rule 91
	'<='           reduce using rule 91
	'>'            reduce using rule 91
	'<'            reduce using rule 91
	newline        reduce using rule 91


State 129

	ARRAYPOSITION -> id '[' id ']' .                    (rule 92)

	youbegin       reduce using rule 92
	whereiend      reduce using rule 92
	';'            reduce using rule 92
	'}'            reduce using rule 92
	']'            reduce using rule 92
	mod            reduce using rule 92
	div            reduce using rule 92
	and            reduce using rule 92
	or             reduce using rule 92
	','            reduce using rule 92
	')'            reduce using rule 92
	'+'            reduce using rule 92
	'=='           reduce using rule 92
	'*'            reduce using rule 92
	'-'            reduce using rule 92
	'%'            reduce using rule 92
	'/'            reduce using rule 92
	'!='           reduce using rule 92
	'>='           reduce using rule 92
	'<='           reduce using rule 92
	'>'            reduce using rule 92
	'<'            reduce using rule 92
	newline        reduce using rule 92


State 130

	FUNCTIONCALL -> id '(' IDS ')' .                    (rule 94)

	youbegin       reduce using rule 94
	whereiend      reduce using rule 94
	';'            reduce using rule 94
	'}'            reduce using rule 94
	']'            reduce using rule 94
	mod            reduce using rule 94
	div            reduce using rule 94
	and            reduce using rule 94
	or             reduce using rule 94
	','            reduce using rule 94
	')'            reduce using rule 94
	'+'            reduce using rule 94
	'=='           reduce using rule 94
	'*'            reduce using rule 94
	'-'            reduce using rule 94
	'%'            reduce using rule 94
	'/'            reduce using rule 94
	'!='           reduce using rule 94
	'>='           reduce using rule 94
	'<='           reduce using rule 94
	'>'            reduce using rule 94
	'<'            reduce using rule 94
	newline        reduce using rule 94


State 131

	EXPRESSION -> newlife '(' EXPRESSION ')' .          (rule 88)

	youbegin       reduce using rule 88
	whereiend      reduce using rule 88
	';'            reduce using rule 88
	'}'            reduce using rule 88
	']'            reduce using rule 88
	mod            reduce using rule 88
	div            reduce using rule 88
	and            reduce using rule 88
	or             reduce using rule 88
	','            reduce using rule 88
	')'            reduce using rule 88
	'+'            reduce using rule 88
	'=='           reduce using rule 88
	'*'            reduce using rule 88
	'-'            reduce using rule 88
	'%'            reduce using rule 88
	'/'            reduce using rule 88
	'!='           reduce using rule 88
	'>='           reduce using rule 88
	'<='           reduce using rule 88
	'>'            reduce using rule 88
	'<'            reduce using rule 88
	newline        reduce using rule 88


State 132

	FUNCTIONINIC -> dafunk id '(' LPARAMETERSFUNC ')' ':' RETURNTYPE . BLOCK    (rule 11)

	youbegin       reduce using rule 95
	newline        shift, and enter state 138

	BLOCK          goto state 136
	MAYBELINE      goto state 137

State 133

	RETURNTYPE -> TYPE .                                (rule 13)

	youbegin       reduce using rule 13
	newline        reduce using rule 13


State 134

	RETURNTYPE -> intothevoid .                         (rule 12)

	youbegin       reduce using rule 12
	newline        reduce using rule 12


State 135

	LDECLARATIONS -> LDECLARATIONS newline DECLARATION .    (rule 60)

	'}'            reduce using rule 60
	newline        reduce using rule 60


State 136

	FUNCTIONINIC -> dafunk id '(' LPARAMETERSFUNC ')' ':' RETURNTYPE BLOCK .    (rule 11)

	newline        reduce using rule 11


State 137

	BLOCK -> MAYBELINE . youbegin INSIDEFUNCTION MAYBELINE whereiend    (rule 19)

	youbegin       shift, and enter state 139


State 138

	MAYBELINE -> newline .                              (rule 96)

	youbegin       reduce using rule 96


State 139

	BLOCK -> MAYBELINE youbegin . INSIDEFUNCTION MAYBELINE whereiend    (rule 19)

	whereiend      reduce using rule 22
	if             shift, and enter state 144
	cantstop       shift, and enter state 145
	breakthru      shift, and enter state 146
	onemoretime    shift, and enter state 147
	readmymind     shift, and enter state 148
	go             shift, and enter state 149
	gomental       shift, and enter state 150
	goslowly       shift, and enter state 151
	getback        shift, and enter state 152
	newlife        shift, and enter state 56
	amnesiac       shift, and enter state 153
	exitmusic      shift, and enter state 154
	int            shift, and enter state 16
	float          shift, and enter state 17
	char           shift, and enter state 18
	boolean        shift, and enter state 19
	ok             shift, and enter state 57
	notok          shift, and enter state 58
	'^'            shift, and enter state 59
	not            shift, and enter state 60
	'('            shift, and enter state 61
	'-'            shift, and enter state 62
	id             shift, and enter state 155
	n              shift, and enter state 64
	newline        reduce using rule 22
	string         shift, and enter state 156

	INSIDEFUNCTION goto state 140
	DECLARATION    goto state 141
	TYPE           goto state 12
	TYPE2          goto state 13
	INSTRUCTION    goto state 142
	EXPRESSION     goto state 143
	ARRAYPOSITION  goto state 53
	EXPRESSIONSTRUCTgoto state 54
	FUNCTIONCALL   goto state 55

State 140

	BLOCK -> MAYBELINE youbegin INSIDEFUNCTION . MAYBELINE whereiend    (rule 19)
	INSIDEFUNCTION -> INSIDEFUNCTION . newline INSTRUCTION    (rule 20)

	whereiend      reduce using rule 95
	newline        shift, and enter state 167

	MAYBELINE      goto state 166

State 141

	INSTRUCTION -> DECLARATION .                        (rule 49)

	whereiend      reduce using rule 49
	newline        reduce using rule 49


State 142

	INSIDEFUNCTION -> INSTRUCTION .                     (rule 21)

	whereiend      reduce using rule 21
	newline        reduce using rule 21


State 143

	INSTRUCTION -> EXPRESSION .                         (rule 50)
	EXPRESSION -> EXPRESSION . '<' EXPRESSION           (rule 68)
	EXPRESSION -> EXPRESSION . '>' EXPRESSION           (rule 69)
	EXPRESSION -> EXPRESSION . '<=' EXPRESSION          (rule 70)
	EXPRESSION -> EXPRESSION . '>=' EXPRESSION          (rule 71)
	EXPRESSION -> EXPRESSION . '==' EXPRESSION          (rule 72)
	EXPRESSION -> EXPRESSION . '!=' EXPRESSION          (rule 73)
	EXPRESSION -> EXPRESSION . and EXPRESSION           (rule 75)
	EXPRESSION -> EXPRESSION . or EXPRESSION            (rule 76)
	EXPRESSION -> EXPRESSION . '+' EXPRESSION           (rule 78)
	EXPRESSION -> EXPRESSION . '-' EXPRESSION           (rule 79)
	EXPRESSION -> EXPRESSION . '*' EXPRESSION           (rule 80)
	EXPRESSION -> EXPRESSION . '/' EXPRESSION           (rule 81)
	EXPRESSION -> EXPRESSION . '%' EXPRESSION           (rule 82)
	EXPRESSION -> EXPRESSION . mod EXPRESSION           (rule 83)
	EXPRESSION -> EXPRESSION . div EXPRESSION           (rule 84)

	whereiend      reduce using rule 50
	mod            shift, and enter state 69
	div            shift, and enter state 70
	and            shift, and enter state 71
	or             shift, and enter state 72
	'+'            shift, and enter state 73
	'=='           shift, and enter state 74
	'*'            shift, and enter state 75
	'-'            shift, and enter state 76
	'%'            shift, and enter state 77
	'/'            shift, and enter state 78
	'!='           shift, and enter state 79
	'>='           shift, and enter state 80
	'<='           shift, and enter state 81
	'>'            shift, and enter state 82
	'<'            shift, and enter state 83
	newline        reduce using rule 50


State 144

	INSTRUCTION -> if . EXPRESSION BLOCK IFELSE         (rule 43)

	newlife        shift, and enter state 56
	ok             shift, and enter state 57
	notok          shift, and enter state 58
	'^'            shift, and enter state 59
	not            shift, and enter state 60
	'('            shift, and enter state 61
	'-'            shift, and enter state 62
	id             shift, and enter state 63
	n              shift, and enter state 64
	string         shift, and enter state 65

	EXPRESSION     goto state 165
	ARRAYPOSITION  goto state 53
	EXPRESSIONSTRUCTgoto state 54
	FUNCTIONCALL   goto state 55

State 145

	INSTRUCTION -> cantstop . EXPRESSION BLOCK          (rule 44)

	newlife        shift, and enter state 56
	ok             shift, and enter state 57
	notok          shift, and enter state 58
	'^'            shift, and enter state 59
	not            shift, and enter state 60
	'('            shift, and enter state 61
	'-'            shift, and enter state 62
	id             shift, and enter state 63
	n              shift, and enter state 64
	string         shift, and enter state 65

	EXPRESSION     goto state 164
	ARRAYPOSITION  goto state 53
	EXPRESSIONSTRUCTgoto state 54
	FUNCTIONCALL   goto state 55

State 146

	INSTRUCTION -> breakthru .                          (rule 47)

	whereiend      reduce using rule 47
	newline        reduce using rule 47


State 147

	INSTRUCTION -> onemoretime . TYPE id '=' EXPRESSION ';' EXPRESSION ';' EXPRESSION BLOCK    (rule 45)

	int            shift, and enter state 16
	float          shift, and enter state 17
	char           shift, and enter state 18
	boolean        shift, and enter state 19
	id             shift, and enter state 22
	string         shift, and enter state 23

	TYPE           goto state 163
	TYPE2          goto state 13

State 148

	INSTRUCTION -> readmymind . '(' IDS ')'             (rule 41)

	'('            shift, and enter state 162


State 149

	INSTRUCTION -> go . '(' PRINT ')'                   (rule 38)

	'('            shift, and enter state 161


State 150

	INSTRUCTION -> gomental . '(' PRINT ')'             (rule 40)

	'('            shift, and enter state 160


State 151

	INSTRUCTION -> goslowly . '(' PRINT ')'             (rule 39)

	'('            shift, and enter state 159


State 152

	INSTRUCTION -> getback . EXPRESSION                 (rule 46)

	newlife        shift, and enter state 56
	ok             shift, and enter state 57
	notok          shift, and enter state 58
	'^'            shift, and enter state 59
	not            shift, and enter state 60
	'('            shift, and enter state 61
	'-'            shift, and enter state 62
	id             shift, and enter state 63
	n              shift, and enter state 64
	string         shift, and enter state 65

	EXPRESSION     goto state 158
	ARRAYPOSITION  goto state 53
	EXPRESSIONSTRUCTgoto state 54
	FUNCTIONCALL   goto state 55

State 153

	INSTRUCTION -> amnesiac . '(' id ')'                (rule 42)

	'('            shift, and enter state 157


State 154

	INSTRUCTION -> exitmusic .                          (rule 48)

	whereiend      reduce using rule 48
	newline        reduce using rule 48


State 155

	TYPE2 -> id .                                       (rule 31)
	EXPRESSION -> id .                                  (rule 62)
	EXPRESSION -> id . '=' EXPRESSION                   (rule 90)
	ARRAYPOSITION -> id . '[' n ']'                     (rule 91)
	ARRAYPOSITION -> id . '[' id ']'                    (rule 92)
	EXPRESSIONSTRUCT -> id . '.' id                     (rule 93)
	FUNCTIONCALL -> id . '(' IDS ')'                    (rule 94)

	whereiend      reduce using rule 62
	'['            shift, and enter state 84
	'.'            shift, and enter state 85
	'^'            reduce using rule 31
	mod            reduce using rule 62
	div            reduce using rule 62
	and            reduce using rule 62
	or             reduce using rule 62
	'('            shift, and enter state 86
	'+'            reduce using rule 62
	'=='           reduce using rule 62
	'*'            reduce using rule 62
	'-'            reduce using rule 62
	'%'            reduce using rule 62
	'/'            reduce using rule 62
	'!='           reduce using rule 62
	'>='           reduce using rule 62
	'<='           reduce using rule 62
	'>'            reduce using rule 62
	'<'            reduce using rule 62
	'='            shift, and enter state 87
	id             reduce using rule 31
	newline        reduce using rule 62


State 156

	TYPE2 -> string .                                   (rule 30)
	EXPRESSION -> string .                              (rule 64)

	whereiend      reduce using rule 64
	'^'            reduce using rule 30
	mod            reduce using rule 64
	div            reduce using rule 64
	and            reduce using rule 64
	or             reduce using rule 64
	'+'            reduce using rule 64
	'=='           reduce using rule 64
	'*'            reduce using rule 64
	'-'            reduce using rule 64
	'%'            reduce using rule 64
	'/'            reduce using rule 64
	'!='           reduce using rule 64
	'>='           reduce using rule 64
	'<='           reduce using rule 64
	'>'            reduce using rule 64
	'<'            reduce using rule 64
	id             reduce using rule 30
	newline        reduce using rule 64


State 157

	INSTRUCTION -> amnesiac '(' . id ')'                (rule 42)

	id             shift, and enter state 179


State 158

	INSTRUCTION -> getback EXPRESSION .                 (rule 46)
	EXPRESSION -> EXPRESSION . '<' EXPRESSION           (rule 68)
	EXPRESSION -> EXPRESSION . '>' EXPRESSION           (rule 69)
	EXPRESSION -> EXPRESSION . '<=' EXPRESSION          (rule 70)
	EXPRESSION -> EXPRESSION . '>=' EXPRESSION          (rule 71)
	EXPRESSION -> EXPRESSION . '==' EXPRESSION          (rule 72)
	EXPRESSION -> EXPRESSION . '!=' EXPRESSION          (rule 73)
	EXPRESSION -> EXPRESSION . and EXPRESSION           (rule 75)
	EXPRESSION -> EXPRESSION . or EXPRESSION            (rule 76)
	EXPRESSION -> EXPRESSION . '+' EXPRESSION           (rule 78)
	EXPRESSION -> EXPRESSION . '-' EXPRESSION           (rule 79)
	EXPRESSION -> EXPRESSION . '*' EXPRESSION           (rule 80)
	EXPRESSION -> EXPRESSION . '/' EXPRESSION           (rule 81)
	EXPRESSION -> EXPRESSION . '%' EXPRESSION           (rule 82)
	EXPRESSION -> EXPRESSION . mod EXPRESSION           (rule 83)
	EXPRESSION -> EXPRESSION . div EXPRESSION           (rule 84)

	whereiend      reduce using rule 46
	mod            shift, and enter state 69
	div            shift, and enter state 70
	and            shift, and enter state 71
	or             shift, and enter state 72
	'+'            shift, and enter state 73
	'=='           shift, and enter state 74
	'*'            shift, and enter state 75
	'-'            shift, and enter state 76
	'%'            shift, and enter state 77
	'/'            shift, and enter state 78
	'!='           shift, and enter state 79
	'>='           shift, and enter state 80
	'<='           shift, and enter state 81
	'>'            shift, and enter state 82
	'<'            shift, and enter state 83
	newline        reduce using rule 46


State 159

	INSTRUCTION -> goslowly '(' . PRINT ')'             (rule 39)

	id             shift, and enter state 175
	string         shift, and enter state 176

	PRINT          goto state 178

State 160

	INSTRUCTION -> gomental '(' . PRINT ')'             (rule 40)

	id             shift, and enter state 175
	string         shift, and enter state 176

	PRINT          goto state 177

State 161

	INSTRUCTION -> go '(' . PRINT ')'                   (rule 38)

	id             shift, and enter state 175
	string         shift, and enter state 176

	PRINT          goto state 174

State 162

	INSTRUCTION -> readmymind '(' . IDS ')'             (rule 41)

	id             shift, and enter state 7

	IDS            goto state 173

State 163

	INSTRUCTION -> onemoretime TYPE . id '=' EXPRESSION ';' EXPRESSION ';' EXPRESSION BLOCK    (rule 45)

	id             shift, and enter state 172


State 164

	INSTRUCTION -> cantstop EXPRESSION . BLOCK          (rule 44)
	EXPRESSION -> EXPRESSION . '<' EXPRESSION           (rule 68)
	EXPRESSION -> EXPRESSION . '>' EXPRESSION           (rule 69)
	EXPRESSION -> EXPRESSION . '<=' EXPRESSION          (rule 70)
	EXPRESSION -> EXPRESSION . '>=' EXPRESSION          (rule 71)
	EXPRESSION -> EXPRESSION . '==' EXPRESSION          (rule 72)
	EXPRESSION -> EXPRESSION . '!=' EXPRESSION          (rule 73)
	EXPRESSION -> EXPRESSION . and EXPRESSION           (rule 75)
	EXPRESSION -> EXPRESSION . or EXPRESSION            (rule 76)
	EXPRESSION -> EXPRESSION . '+' EXPRESSION           (rule 78)
	EXPRESSION -> EXPRESSION . '-' EXPRESSION           (rule 79)
	EXPRESSION -> EXPRESSION . '*' EXPRESSION           (rule 80)
	EXPRESSION -> EXPRESSION . '/' EXPRESSION           (rule 81)
	EXPRESSION -> EXPRESSION . '%' EXPRESSION           (rule 82)
	EXPRESSION -> EXPRESSION . mod EXPRESSION           (rule 83)
	EXPRESSION -> EXPRESSION . div EXPRESSION           (rule 84)

	youbegin       reduce using rule 95
	mod            shift, and enter state 69
	div            shift, and enter state 70
	and            shift, and enter state 71
	or             shift, and enter state 72
	'+'            shift, and enter state 73
	'=='           shift, and enter state 74
	'*'            shift, and enter state 75
	'-'            shift, and enter state 76
	'%'            shift, and enter state 77
	'/'            shift, and enter state 78
	'!='           shift, and enter state 79
	'>='           shift, and enter state 80
	'<='           shift, and enter state 81
	'>'            shift, and enter state 82
	'<'            shift, and enter state 83
	newline        shift, and enter state 138

	BLOCK          goto state 171
	MAYBELINE      goto state 137

State 165

	INSTRUCTION -> if EXPRESSION . BLOCK IFELSE         (rule 43)
	EXPRESSION -> EXPRESSION . '<' EXPRESSION           (rule 68)
	EXPRESSION -> EXPRESSION . '>' EXPRESSION           (rule 69)
	EXPRESSION -> EXPRESSION . '<=' EXPRESSION          (rule 70)
	EXPRESSION -> EXPRESSION . '>=' EXPRESSION          (rule 71)
	EXPRESSION -> EXPRESSION . '==' EXPRESSION          (rule 72)
	EXPRESSION -> EXPRESSION . '!=' EXPRESSION          (rule 73)
	EXPRESSION -> EXPRESSION . and EXPRESSION           (rule 75)
	EXPRESSION -> EXPRESSION . or EXPRESSION            (rule 76)
	EXPRESSION -> EXPRESSION . '+' EXPRESSION           (rule 78)
	EXPRESSION -> EXPRESSION . '-' EXPRESSION           (rule 79)
	EXPRESSION -> EXPRESSION . '*' EXPRESSION           (rule 80)
	EXPRESSION -> EXPRESSION . '/' EXPRESSION           (rule 81)
	EXPRESSION -> EXPRESSION . '%' EXPRESSION           (rule 82)
	EXPRESSION -> EXPRESSION . mod EXPRESSION           (rule 83)
	EXPRESSION -> EXPRESSION . div EXPRESSION           (rule 84)

	youbegin       reduce using rule 95
	mod            shift, and enter state 69
	div            shift, and enter state 70
	and            shift, and enter state 71
	or             shift, and enter state 72
	'+'            shift, and enter state 73
	'=='           shift, and enter state 74
	'*'            shift, and enter state 75
	'-'            shift, and enter state 76
	'%'            shift, and enter state 77
	'/'            shift, and enter state 78
	'!='           shift, and enter state 79
	'>='           shift, and enter state 80
	'<='           shift, and enter state 81
	'>'            shift, and enter state 82
	'<'            shift, and enter state 83
	newline        shift, and enter state 138

	BLOCK          goto state 170
	MAYBELINE      goto state 137

State 166

	BLOCK -> MAYBELINE youbegin INSIDEFUNCTION MAYBELINE . whereiend    (rule 19)

	whereiend      shift, and enter state 169


State 167

	INSIDEFUNCTION -> INSIDEFUNCTION newline . INSTRUCTION    (rule 20)
	MAYBELINE -> newline .                              (rule 96)

	whereiend      reduce using rule 96
	if             shift, and enter state 144
	cantstop       shift, and enter state 145
	breakthru      shift, and enter state 146
	onemoretime    shift, and enter state 147
	readmymind     shift, and enter state 148
	go             shift, and enter state 149
	gomental       shift, and enter state 150
	goslowly       shift, and enter state 151
	getback        shift, and enter state 152
	newlife        shift, and enter state 56
	amnesiac       shift, and enter state 153
	exitmusic      shift, and enter state 154
	int            shift, and enter state 16
	float          shift, and enter state 17
	char           shift, and enter state 18
	boolean        shift, and enter state 19
	ok             shift, and enter state 57
	notok          shift, and enter state 58
	'^'            shift, and enter state 59
	not            shift, and enter state 60
	'('            shift, and enter state 61
	'-'            shift, and enter state 62
	id             shift, and enter state 155
	n              shift, and enter state 64
	string         shift, and enter state 156

	DECLARATION    goto state 141
	TYPE           goto state 12
	TYPE2          goto state 13
	INSTRUCTION    goto state 168
	EXPRESSION     goto state 143
	ARRAYPOSITION  goto state 53
	EXPRESSIONSTRUCTgoto state 54
	FUNCTIONCALL   goto state 55

State 168

	INSIDEFUNCTION -> INSIDEFUNCTION newline INSTRUCTION .    (rule 20)

	whereiend      reduce using rule 20
	newline        reduce using rule 20


State 169

	BLOCK -> MAYBELINE youbegin INSIDEFUNCTION MAYBELINE whereiend .    (rule 19)

	whereiend      reduce using rule 19
	ifyouhavetoask reduce using rule 19
	otherside      reduce using rule 19
	newline        reduce using rule 19


State 170

	INSTRUCTION -> if EXPRESSION BLOCK . IFELSE         (rule 43)

	whereiend      reduce using rule 53
	ifyouhavetoask shift, and enter state 189
	otherside      shift, and enter state 190
	newline        reduce using rule 53

	IFELSE         goto state 188

State 171

	INSTRUCTION -> cantstop EXPRESSION BLOCK .          (rule 44)

	whereiend      reduce using rule 44
	newline        reduce using rule 44


State 172

	INSTRUCTION -> onemoretime TYPE id . '=' EXPRESSION ';' EXPRESSION ';' EXPRESSION BLOCK    (rule 45)

	'='            shift, and enter state 187


State 173

	INSTRUCTION -> readmymind '(' IDS . ')'             (rule 41)

	')'            shift, and enter state 186


State 174

	INSTRUCTION -> go '(' PRINT . ')'                   (rule 38)

	')'            shift, and enter state 185


State 175

	PRINT -> id . ',' PRINT                             (rule 55)
	PRINT -> id .                                       (rule 57)

	','            shift, and enter state 184
	')'            reduce using rule 57


State 176

	PRINT -> string . ',' PRINT                         (rule 54)
	PRINT -> string .                                   (rule 56)

	','            shift, and enter state 183
	')'            reduce using rule 56


State 177

	INSTRUCTION -> gomental '(' PRINT . ')'             (rule 40)

	')'            shift, and enter state 182


State 178

	INSTRUCTION -> goslowly '(' PRINT . ')'             (rule 39)

	')'            shift, and enter state 181


State 179

	INSTRUCTION -> amnesiac '(' id . ')'                (rule 42)

	')'            shift, and enter state 180


State 180

	INSTRUCTION -> amnesiac '(' id ')' .                (rule 42)

	whereiend      reduce using rule 42
	newline        reduce using rule 42


State 181

	INSTRUCTION -> goslowly '(' PRINT ')' .             (rule 39)

	whereiend      reduce using rule 39
	newline        reduce using rule 39


State 182

	INSTRUCTION -> gomental '(' PRINT ')' .             (rule 40)

	whereiend      reduce using rule 40
	newline        reduce using rule 40


State 183

	PRINT -> string ',' . PRINT                         (rule 54)

	id             shift, and enter state 175
	string         shift, and enter state 176

	PRINT          goto state 195

State 184

	PRINT -> id ',' . PRINT                             (rule 55)

	id             shift, and enter state 175
	string         shift, and enter state 176

	PRINT          goto state 194

State 185

	INSTRUCTION -> go '(' PRINT ')' .                   (rule 38)

	whereiend      reduce using rule 38
	newline        reduce using rule 38


State 186

	INSTRUCTION -> readmymind '(' IDS ')' .             (rule 41)

	whereiend      reduce using rule 41
	newline        reduce using rule 41


State 187

	INSTRUCTION -> onemoretime TYPE id '=' . EXPRESSION ';' EXPRESSION ';' EXPRESSION BLOCK    (rule 45)

	newlife        shift, and enter state 56
	ok             shift, and enter state 57
	notok          shift, and enter state 58
	'^'            shift, and enter state 59
	not            shift, and enter state 60
	'('            shift, and enter state 61
	'-'            shift, and enter state 62
	id             shift, and enter state 63
	n              shift, and enter state 64
	string         shift, and enter state 65

	EXPRESSION     goto state 193
	ARRAYPOSITION  goto state 53
	EXPRESSIONSTRUCTgoto state 54
	FUNCTIONCALL   goto state 55

State 188

	INSTRUCTION -> if EXPRESSION BLOCK IFELSE .         (rule 43)

	whereiend      reduce using rule 43
	newline        reduce using rule 43


State 189

	IFELSE -> ifyouhavetoask . EXPRESSION BLOCK newline IFELSE    (rule 51)

	newlife        shift, and enter state 56
	ok             shift, and enter state 57
	notok          shift, and enter state 58
	'^'            shift, and enter state 59
	not            shift, and enter state 60
	'('            shift, and enter state 61
	'-'            shift, and enter state 62
	id             shift, and enter state 63
	n              shift, and enter state 64
	string         shift, and enter state 65

	EXPRESSION     goto state 192
	ARRAYPOSITION  goto state 53
	EXPRESSIONSTRUCTgoto state 54
	FUNCTIONCALL   goto state 55

State 190

	IFELSE -> otherside . BLOCK newline                 (rule 52)

	youbegin       reduce using rule 95
	newline        shift, and enter state 138

	BLOCK          goto state 191
	MAYBELINE      goto state 137

State 191

	IFELSE -> otherside BLOCK . newline                 (rule 52)

	newline        shift, and enter state 198


State 192

	IFELSE -> ifyouhavetoask EXPRESSION . BLOCK newline IFELSE    (rule 51)
	EXPRESSION -> EXPRESSION . '<' EXPRESSION           (rule 68)
	EXPRESSION -> EXPRESSION . '>' EXPRESSION           (rule 69)
	EXPRESSION -> EXPRESSION . '<=' EXPRESSION          (rule 70)
	EXPRESSION -> EXPRESSION . '>=' EXPRESSION          (rule 71)
	EXPRESSION -> EXPRESSION . '==' EXPRESSION          (rule 72)
	EXPRESSION -> EXPRESSION . '!=' EXPRESSION          (rule 73)
	EXPRESSION -> EXPRESSION . and EXPRESSION           (rule 75)
	EXPRESSION -> EXPRESSION . or EXPRESSION            (rule 76)
	EXPRESSION -> EXPRESSION . '+' EXPRESSION           (rule 78)
	EXPRESSION -> EXPRESSION . '-' EXPRESSION           (rule 79)
	EXPRESSION -> EXPRESSION . '*' EXPRESSION           (rule 80)
	EXPRESSION -> EXPRESSION . '/' EXPRESSION           (rule 81)
	EXPRESSION -> EXPRESSION . '%' EXPRESSION           (rule 82)
	EXPRESSION -> EXPRESSION . mod EXPRESSION           (rule 83)
	EXPRESSION -> EXPRESSION . div EXPRESSION           (rule 84)

	youbegin       reduce using rule 95
	mod            shift, and enter state 69
	div            shift, and enter state 70
	and            shift, and enter state 71
	or             shift, and enter state 72
	'+'            shift, and enter state 73
	'=='           shift, and enter state 74
	'*'            shift, and enter state 75
	'-'            shift, and enter state 76
	'%'            shift, and enter state 77
	'/'            shift, and enter state 78
	'!='           shift, and enter state 79
	'>='           shift, and enter state 80
	'<='           shift, and enter state 81
	'>'            shift, and enter state 82
	'<'            shift, and enter state 83
	newline        shift, and enter state 138

	BLOCK          goto state 197
	MAYBELINE      goto state 137

State 193

	INSTRUCTION -> onemoretime TYPE id '=' EXPRESSION . ';' EXPRESSION ';' EXPRESSION BLOCK    (rule 45)
	EXPRESSION -> EXPRESSION . '<' EXPRESSION           (rule 68)
	EXPRESSION -> EXPRESSION . '>' EXPRESSION           (rule 69)
	EXPRESSION -> EXPRESSION . '<=' EXPRESSION          (rule 70)
	EXPRESSION -> EXPRESSION . '>=' EXPRESSION          (rule 71)
	EXPRESSION -> EXPRESSION . '==' EXPRESSION          (rule 72)
	EXPRESSION -> EXPRESSION . '!=' EXPRESSION          (rule 73)
	EXPRESSION -> EXPRESSION . and EXPRESSION           (rule 75)
	EXPRESSION -> EXPRESSION . or EXPRESSION            (rule 76)
	EXPRESSION -> EXPRESSION . '+' EXPRESSION           (rule 78)
	EXPRESSION -> EXPRESSION . '-' EXPRESSION           (rule 79)
	EXPRESSION -> EXPRESSION . '*' EXPRESSION           (rule 80)
	EXPRESSION -> EXPRESSION . '/' EXPRESSION           (rule 81)
	EXPRESSION -> EXPRESSION . '%' EXPRESSION           (rule 82)
	EXPRESSION -> EXPRESSION . mod EXPRESSION           (rule 83)
	EXPRESSION -> EXPRESSION . div EXPRESSION           (rule 84)

	';'            shift, and enter state 196
	mod            shift, and enter state 69
	div            shift, and enter state 70
	and            shift, and enter state 71
	or             shift, and enter state 72
	'+'            shift, and enter state 73
	'=='           shift, and enter state 74
	'*'            shift, and enter state 75
	'-'            shift, and enter state 76
	'%'            shift, and enter state 77
	'/'            shift, and enter state 78
	'!='           shift, and enter state 79
	'>='           shift, and enter state 80
	'<='           shift, and enter state 81
	'>'            shift, and enter state 82
	'<'            shift, and enter state 83


State 194

	PRINT -> id ',' PRINT .                             (rule 55)

	')'            reduce using rule 55


State 195

	PRINT -> string ',' PRINT .                         (rule 54)

	')'            reduce using rule 54


State 196

	INSTRUCTION -> onemoretime TYPE id '=' EXPRESSION ';' . EXPRESSION ';' EXPRESSION BLOCK    (rule 45)

	newlife        shift, and enter state 56
	ok             shift, and enter state 57
	notok          shift, and enter state 58
	'^'            shift, and enter state 59
	not            shift, and enter state 60
	'('            shift, and enter state 61
	'-'            shift, and enter state 62
	id             shift, and enter state 63
	n              shift, and enter state 64
	string         shift, and enter state 65

	EXPRESSION     goto state 200
	ARRAYPOSITION  goto state 53
	EXPRESSIONSTRUCTgoto state 54
	FUNCTIONCALL   goto state 55

State 197

	IFELSE -> ifyouhavetoask EXPRESSION BLOCK . newline IFELSE    (rule 51)

	newline        shift, and enter state 199


State 198

	IFELSE -> otherside BLOCK newline .                 (rule 52)

	whereiend      reduce using rule 52
	newline        reduce using rule 52


State 199

	IFELSE -> ifyouhavetoask EXPRESSION BLOCK newline . IFELSE    (rule 51)

	whereiend      reduce using rule 53
	ifyouhavetoask shift, and enter state 189
	otherside      shift, and enter state 190
	newline        reduce using rule 53

	IFELSE         goto state 202

State 200

	INSTRUCTION -> onemoretime TYPE id '=' EXPRESSION ';' EXPRESSION . ';' EXPRESSION BLOCK    (rule 45)
	EXPRESSION -> EXPRESSION . '<' EXPRESSION           (rule 68)
	EXPRESSION -> EXPRESSION . '>' EXPRESSION           (rule 69)
	EXPRESSION -> EXPRESSION . '<=' EXPRESSION          (rule 70)
	EXPRESSION -> EXPRESSION . '>=' EXPRESSION          (rule 71)
	EXPRESSION -> EXPRESSION . '==' EXPRESSION          (rule 72)
	EXPRESSION -> EXPRESSION . '!=' EXPRESSION          (rule 73)
	EXPRESSION -> EXPRESSION . and EXPRESSION           (rule 75)
	EXPRESSION -> EXPRESSION . or EXPRESSION            (rule 76)
	EXPRESSION -> EXPRESSION . '+' EXPRESSION           (rule 78)
	EXPRESSION -> EXPRESSION . '-' EXPRESSION           (rule 79)
	EXPRESSION -> EXPRESSION . '*' EXPRESSION           (rule 80)
	EXPRESSION -> EXPRESSION . '/' EXPRESSION           (rule 81)
	EXPRESSION -> EXPRESSION . '%' EXPRESSION           (rule 82)
	EXPRESSION -> EXPRESSION . mod EXPRESSION           (rule 83)
	EXPRESSION -> EXPRESSION . div EXPRESSION           (rule 84)

	';'            shift, and enter state 201
	mod            shift, and enter state 69
	div            shift, and enter state 70
	and            shift, and enter state 71
	or             shift, and enter state 72
	'+'            shift, and enter state 73
	'=='           shift, and enter state 74
	'*'            shift, and enter state 75
	'-'            shift, and enter state 76
	'%'            shift, and enter state 77
	'/'            shift, and enter state 78
	'!='           shift, and enter state 79
	'>='           shift, and enter state 80
	'<='           shift, and enter state 81
	'>'            shift, and enter state 82
	'<'            shift, and enter state 83


State 201

	INSTRUCTION -> onemoretime TYPE id '=' EXPRESSION ';' EXPRESSION ';' . EXPRESSION BLOCK    (rule 45)

	newlife        shift, and enter state 56
	ok             shift, and enter state 57
	notok          shift, and enter state 58
	'^'            shift, and enter state 59
	not            shift, and enter state 60
	'('            shift, and enter state 61
	'-'            shift, and enter state 62
	id             shift, and enter state 63
	n              shift, and enter state 64
	string         shift, and enter state 65

	EXPRESSION     goto state 203
	ARRAYPOSITION  goto state 53
	EXPRESSIONSTRUCTgoto state 54
	FUNCTIONCALL   goto state 55

State 202

	IFELSE -> ifyouhavetoask EXPRESSION BLOCK newline IFELSE .    (rule 51)

	whereiend      reduce using rule 51
	newline        reduce using rule 51


State 203

	INSTRUCTION -> onemoretime TYPE id '=' EXPRESSION ';' EXPRESSION ';' EXPRESSION . BLOCK    (rule 45)
	EXPRESSION -> EXPRESSION . '<' EXPRESSION           (rule 68)
	EXPRESSION -> EXPRESSION . '>' EXPRESSION           (rule 69)
	EXPRESSION -> EXPRESSION . '<=' EXPRESSION          (rule 70)
	EXPRESSION -> EXPRESSION . '>=' EXPRESSION          (rule 71)
	EXPRESSION -> EXPRESSION . '==' EXPRESSION          (rule 72)
	EXPRESSION -> EXPRESSION . '!=' EXPRESSION          (rule 73)
	EXPRESSION -> EXPRESSION . and EXPRESSION           (rule 75)
	EXPRESSION -> EXPRESSION . or EXPRESSION            (rule 76)
	EXPRESSION -> EXPRESSION . '+' EXPRESSION           (rule 78)
	EXPRESSION -> EXPRESSION . '-' EXPRESSION           (rule 79)
	EXPRESSION -> EXPRESSION . '*' EXPRESSION           (rule 80)
	EXPRESSION -> EXPRESSION . '/' EXPRESSION           (rule 81)
	EXPRESSION -> EXPRESSION . '%' EXPRESSION           (rule 82)
	EXPRESSION -> EXPRESSION . mod EXPRESSION           (rule 83)
	EXPRESSION -> EXPRESSION . div EXPRESSION           (rule 84)

	youbegin       reduce using rule 95
	mod            shift, and enter state 69
	div            shift, and enter state 70
	and            shift, and enter state 71
	or             shift, and enter state 72
	'+'            shift, and enter state 73
	'=='           shift, and enter state 74
	'*'            shift, and enter state 75
	'-'            shift, and enter state 76
	'%'            shift, and enter state 77
	'/'            shift, and enter state 78
	'!='           shift, and enter state 79
	'>='           shift, and enter state 80
	'<='           shift, and enter state 81
	'>'            shift, and enter state 82
	'<'            shift, and enter state 83
	newline        shift, and enter state 138

	BLOCK          goto state 204
	MAYBELINE      goto state 137

State 204

	INSTRUCTION -> onemoretime TYPE id '=' EXPRESSION ';' EXPRESSION ';' EXPRESSION BLOCK .    (rule 45)

	whereiend      reduce using rule 45
	newline        reduce using rule 45


-----------------------------------------------------------------------------
Grammar Totals
-----------------------------------------------------------------------------
Number of rules: 97
Number of terminals: 64
Number of non-terminals: 28
Number of states: 205
